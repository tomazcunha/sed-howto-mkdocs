{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"0. Vers\u00e3o Markdown com MkDocs Esta documenta\u00e7\u00e3o \u00e9 criada a partir do material disponibilizado pelo Aurelio Jargas Sed HOWTO | Aurelio.net , utilizando-se da linguagem de marca\u00e7\u00e3o Markdown e a ferramenta MkDocs para gerar esta vers\u00e3o com o objetivo de facilitar a visualiza\u00e7\u00e3o e consulta do conte\u00fado. Link deste projeto: tomazcunha/sed-howto-mkdocs 0.1. Baixando e acessando a documenta\u00e7\u00e3o localmente Fa\u00e7a o download do projeto: git clone https://github.com/tomazcunha/sed-howto-mkdocs Para acessar, basta abrir o arquivo \u201csed-howto-mkdocs/site/index.html\u201d no seu navegador. 0.2. Para abrir e executar com Mkdocs localmente (linux) Instala\u00e7\u00f5es mkdocs usando o pip do python: sudo pip install mkdocs mkdocs --version # mkdocs, version 0.17.5 Fa\u00e7a o download do projeto: git clone https://github.com/tomazcunha/sed-howto-mkdocs Acesse a pasta do projeto: cd sed-howto Execute: mkdocs serve Acesse pelo navegador o endere\u00e7o do localhost gerado: http://127.0.0.1:8000","title":"0. Vers\u00e3o Markdown com MkDocs"},{"location":"index.html#0-versao-markdown-com-mkdocs","text":"Esta documenta\u00e7\u00e3o \u00e9 criada a partir do material disponibilizado pelo Aurelio Jargas Sed HOWTO | Aurelio.net , utilizando-se da linguagem de marca\u00e7\u00e3o Markdown e a ferramenta MkDocs para gerar esta vers\u00e3o com o objetivo de facilitar a visualiza\u00e7\u00e3o e consulta do conte\u00fado. Link deste projeto: tomazcunha/sed-howto-mkdocs","title":"0. Vers\u00e3o Markdown com MkDocs"},{"location":"index.html#01-baixando-e-acessando-a-documentacao-localmente","text":"Fa\u00e7a o download do projeto: git clone https://github.com/tomazcunha/sed-howto-mkdocs Para acessar, basta abrir o arquivo \u201csed-howto-mkdocs/site/index.html\u201d no seu navegador.","title":"0.1. Baixando e acessando a documenta\u00e7\u00e3o localmente"},{"location":"index.html#02-para-abrir-e-executar-com-mkdocs-localmente-linux","text":"Instala\u00e7\u00f5es mkdocs usando o pip do python: sudo pip install mkdocs mkdocs --version # mkdocs, version 0.17.5 Fa\u00e7a o download do projeto: git clone https://github.com/tomazcunha/sed-howto-mkdocs Acesse a pasta do projeto: cd sed-howto Execute: mkdocs serve Acesse pelo navegador o endere\u00e7o do localhost gerado: http://127.0.0.1:8000","title":"0.2. Para abrir e executar com Mkdocs localmente (linux)"},{"location":"Cap01-Sobre.html","text":"1. Sobre este documento 1.1. Descri\u00e7\u00e3o Este documento se prop\u00f5e a ser um tutorial e um guia de consulta de Sed ao mesmo tempo. Tutorial porque ele vai lhe apresentando o Sed aos poucos, explicando seu funcionamento. Guia de consulta porque ele tem dicas avan\u00e7adas e descreve truques espec\u00edficos que s\u00f3 ser\u00e3o assimilados e compreendidos executando-os na pr\u00e1tica. Este documento N\u00c3O abordar\u00e1 as Express\u00f5es Regulares , que s\u00e3o um tema complexo, e embora fa\u00e7am parte da ess\u00eancia do Sed , seu funcionamento independe delas. Resumindo, o Sed HOWTO fala sobre Sed . Este documento pode (deve) ser distribu\u00eddo \u00e0 vontade. 1.2. An\u00fancio Este documento \u00e9 algo que eu estava me devendo h\u00e1 s\u00e9culos: uma documenta\u00e7\u00e3o decente em portugu\u00eas sobre o Sed e seus detalhes. \u00c9 o Sed HOWTO , um misto de tutorial e guia de refer\u00eancia, com exemplos pr\u00e1ticos. A id\u00e9ia \u00e9 que sirva tanto aos principiantes quanto aos iniciados, abrangendo conceitos b\u00e1sicos e complexos. https://aurelio.net/sed/sed-HOWTO/ Convido todos a visitarem e dar uma lida. Al\u00e9m de uma explica\u00e7\u00e3o bem detalhada, \"gr\u00e1fica\" e did\u00e1tica dos registradores internos e seus comandos Com certeza, ainda tem MUITA coisa a melhorar/acrescentar. Qualquer sugest\u00e3o \u00e9 bem-vinda. 1.3. Onde encontr\u00e1-lo A casa oficial deste documento \u00e9 na se\u00e7\u00e3o Sed do Site do Aurelio. Voc\u00ea pode consult\u00e1-lo on-line ou baix\u00e1-lo para leitura local: https://aurelio.net/sed/sed-HOWTO/ 1.4. Registro de mudan\u00e7as 2017 Removidas as vers\u00f5es TXT e HTML multip\u00e1ginas deste documento, para facilitar sua manuten\u00e7\u00e3o Melhorados os nomes das \u00e2ncoras HTML, de toc1, toc2, ... pra nome-do-topico 2009-06-26 \u2014 v0.6 Documento convertido para UTF-8 A vers\u00e3o HTML de uma \u00fanica p\u00e1gina agora vem sem formata\u00e7\u00e3o (CSS) para facilitar a impress\u00e3o Removidas as vers\u00f5es PDF e SGML deste documento, para facilitar sua manuten\u00e7\u00e3o Todos os links externos foram verificados e atualizados Agora as refer\u00eancias internas para outros t\u00f3picos s\u00e3o links Padronizado o nome \"Sed\" em vez de \"sed\" e \"SED\" ao referir-se ao programa Adicionado link para o manual do GNU Sed, em Onde obter mais informa\u00e7\u00f5es . Adicionado link e melhorada a tabela em Emulando outros comandos Melhorias nos desenhos ASCII (curvas com + e alinhamento) Melhorias de formata\u00e7\u00e3o na lista de agradecimentos 2003-04-15 \u2014 v0.5 Listagem dos comandos adicionada em Descri\u00e7\u00e3o de todos os comandos Mudan\u00e7as cosm\u00e9ticas, URLs atualizadas, s/endere\u00e7amento/endere\u00e7o/g Adicionada vers\u00e3o HTML (tudo em uma p\u00e1gina) e retirada a vers\u00e3o em PostScript (basta fazer sgml2latex -o ps sed-HOWTO.sgml ) Retirado tamb\u00e9m o .tgz do ar O txt2tags agora \u00e9 o conversor utilizado para gerar o Sed HOWTO - acabaram os t\u00edtulos em CAPSLOCK 2001-02-02 \u2014 v0.4 Documento disponibilizado agora tamb\u00e9m em ps e pdf Mais info na se\u00e7\u00e3o An\u00fancio , sobre os formatos novos 2000-12-03 \u2014 v0.3 Criada se\u00e7\u00e3o Trocando um trecho de texto por outro Criada se\u00e7\u00e3o Fluxos da execu\u00e7\u00e3o dos comandos Criada se\u00e7\u00e3o Onde encontr\u00e1-lo Exemplo gr\u00e1fico did\u00e1tico em Conhecendo os registradores internos Informa\u00e7\u00f5es mais did\u00e1ticas na se\u00e7\u00e3o Como ele funciona Documento disponibilizado em txt e sgml V\u00e1rias corre\u00e7\u00f5es pequenas nos textos 2000-09-13 \u2014 v0.2 Criada se\u00e7\u00e3o An\u00fancio Criada se\u00e7\u00e3o Registro de mudan\u00e7as Criada se\u00e7\u00e3o Agradecimentos Disponibilizado este documento em HTML compactado Retirada entrada duplicada na se\u00e7\u00e3o Emulando outros comandos 2000-08-2 \u2014 v0.1 1\u00aa vers\u00e3o Disponibiliza\u00e7\u00e3o na internet 1.5. Agradecimentos Meus agradecimentos sinceros \u00e0queles que comentaram, enviaram sugest\u00f5es e corre\u00e7\u00f5es, ou ajudaram na divulga\u00e7\u00e3o, via e-mail ou internet. .*@conectiva .*@lista_sed-br .*@lista_sed-users Carlos Alvsan Eduardo Mendes Rafael Steil Rodrigo Bernardo Pimentel Rubens Queiroz de Almeida & Dicas-l S\u00e9rgio Bruder & .BR Thobias Salazar Trevisan Tiago Barros & senha.org","title":"1. Sobre este documento"},{"location":"Cap01-Sobre.html#1-sobre-este-documento","text":"","title":"1. Sobre este documento"},{"location":"Cap01-Sobre.html#11-descricao","text":"Este documento se prop\u00f5e a ser um tutorial e um guia de consulta de Sed ao mesmo tempo. Tutorial porque ele vai lhe apresentando o Sed aos poucos, explicando seu funcionamento. Guia de consulta porque ele tem dicas avan\u00e7adas e descreve truques espec\u00edficos que s\u00f3 ser\u00e3o assimilados e compreendidos executando-os na pr\u00e1tica. Este documento N\u00c3O abordar\u00e1 as Express\u00f5es Regulares , que s\u00e3o um tema complexo, e embora fa\u00e7am parte da ess\u00eancia do Sed , seu funcionamento independe delas. Resumindo, o Sed HOWTO fala sobre Sed . Este documento pode (deve) ser distribu\u00eddo \u00e0 vontade.","title":"1.1. Descri\u00e7\u00e3o"},{"location":"Cap01-Sobre.html#12-anuncio","text":"Este documento \u00e9 algo que eu estava me devendo h\u00e1 s\u00e9culos: uma documenta\u00e7\u00e3o decente em portugu\u00eas sobre o Sed e seus detalhes. \u00c9 o Sed HOWTO , um misto de tutorial e guia de refer\u00eancia, com exemplos pr\u00e1ticos. A id\u00e9ia \u00e9 que sirva tanto aos principiantes quanto aos iniciados, abrangendo conceitos b\u00e1sicos e complexos. https://aurelio.net/sed/sed-HOWTO/ Convido todos a visitarem e dar uma lida. Al\u00e9m de uma explica\u00e7\u00e3o bem detalhada, \"gr\u00e1fica\" e did\u00e1tica dos registradores internos e seus comandos Com certeza, ainda tem MUITA coisa a melhorar/acrescentar. Qualquer sugest\u00e3o \u00e9 bem-vinda.","title":"1.2. An\u00fancio"},{"location":"Cap01-Sobre.html#13-onde-encontra-lo","text":"A casa oficial deste documento \u00e9 na se\u00e7\u00e3o Sed do Site do Aurelio. Voc\u00ea pode consult\u00e1-lo on-line ou baix\u00e1-lo para leitura local: https://aurelio.net/sed/sed-HOWTO/","title":"1.3. Onde encontr\u00e1-lo"},{"location":"Cap01-Sobre.html#14-registro-de-mudancas","text":"2017 Removidas as vers\u00f5es TXT e HTML multip\u00e1ginas deste documento, para facilitar sua manuten\u00e7\u00e3o Melhorados os nomes das \u00e2ncoras HTML, de toc1, toc2, ... pra nome-do-topico 2009-06-26 \u2014 v0.6 Documento convertido para UTF-8 A vers\u00e3o HTML de uma \u00fanica p\u00e1gina agora vem sem formata\u00e7\u00e3o (CSS) para facilitar a impress\u00e3o Removidas as vers\u00f5es PDF e SGML deste documento, para facilitar sua manuten\u00e7\u00e3o Todos os links externos foram verificados e atualizados Agora as refer\u00eancias internas para outros t\u00f3picos s\u00e3o links Padronizado o nome \"Sed\" em vez de \"sed\" e \"SED\" ao referir-se ao programa Adicionado link para o manual do GNU Sed, em Onde obter mais informa\u00e7\u00f5es . Adicionado link e melhorada a tabela em Emulando outros comandos Melhorias nos desenhos ASCII (curvas com + e alinhamento) Melhorias de formata\u00e7\u00e3o na lista de agradecimentos 2003-04-15 \u2014 v0.5 Listagem dos comandos adicionada em Descri\u00e7\u00e3o de todos os comandos Mudan\u00e7as cosm\u00e9ticas, URLs atualizadas, s/endere\u00e7amento/endere\u00e7o/g Adicionada vers\u00e3o HTML (tudo em uma p\u00e1gina) e retirada a vers\u00e3o em PostScript (basta fazer sgml2latex -o ps sed-HOWTO.sgml ) Retirado tamb\u00e9m o .tgz do ar O txt2tags agora \u00e9 o conversor utilizado para gerar o Sed HOWTO - acabaram os t\u00edtulos em CAPSLOCK 2001-02-02 \u2014 v0.4 Documento disponibilizado agora tamb\u00e9m em ps e pdf Mais info na se\u00e7\u00e3o An\u00fancio , sobre os formatos novos 2000-12-03 \u2014 v0.3 Criada se\u00e7\u00e3o Trocando um trecho de texto por outro Criada se\u00e7\u00e3o Fluxos da execu\u00e7\u00e3o dos comandos Criada se\u00e7\u00e3o Onde encontr\u00e1-lo Exemplo gr\u00e1fico did\u00e1tico em Conhecendo os registradores internos Informa\u00e7\u00f5es mais did\u00e1ticas na se\u00e7\u00e3o Como ele funciona Documento disponibilizado em txt e sgml V\u00e1rias corre\u00e7\u00f5es pequenas nos textos 2000-09-13 \u2014 v0.2 Criada se\u00e7\u00e3o An\u00fancio Criada se\u00e7\u00e3o Registro de mudan\u00e7as Criada se\u00e7\u00e3o Agradecimentos Disponibilizado este documento em HTML compactado Retirada entrada duplicada na se\u00e7\u00e3o Emulando outros comandos 2000-08-2 \u2014 v0.1 1\u00aa vers\u00e3o Disponibiliza\u00e7\u00e3o na internet","title":"1.4. Registro de mudan\u00e7as"},{"location":"Cap01-Sobre.html#15-agradecimentos","text":"Meus agradecimentos sinceros \u00e0queles que comentaram, enviaram sugest\u00f5es e corre\u00e7\u00f5es, ou ajudaram na divulga\u00e7\u00e3o, via e-mail ou internet. .*@conectiva .*@lista_sed-br .*@lista_sed-users Carlos Alvsan Eduardo Mendes Rafael Steil Rodrigo Bernardo Pimentel Rubens Queiroz de Almeida & Dicas-l S\u00e9rgio Bruder & .BR Thobias Salazar Trevisan Tiago Barros & senha.org","title":"1.5. Agradecimentos"},{"location":"Cap02-Conhecendo-o-sed.html","text":"2. Conhecendo o sed Vamos conhecer um pouco o Sed , mostrar que ele n\u00e3o \u00e9 o bicho de Sed cabe\u00e7as que aparenta :) 2.1. Descri\u00e7\u00e3o do Sed O Sed \u00e9 um editor de textos n\u00e3o interativo . Ele pode editar automaticamente, sem intera\u00e7\u00e3o do usu\u00e1rio, v\u00e1rios arquivos seguindo um conjunto de regras especificadas. 2.2. O que significa a palavra Sed Vem do ingl\u00eas \"Stream EDitor\", ou seja, editor de fluxos (de texto). 2.3. Como saber se devo usar o Sed Sendo um editor de textos n\u00e3o interativo, o Sed \u00e9 excelente para desempenhar algumas tarefas, mas em outras seu uso n\u00e3o \u00e9 aconselhado. 2.3.1. Quando usar o Sed A caracter\u00edstica principal do Sed \u00e9 poder editar arquivos automaticamente. Ent\u00e3o sempre que voc\u00ea precisar fazer altera\u00e7\u00f5es sistem\u00e1ticas em v\u00e1rios arquivos, o Sed \u00e9 uma solu\u00e7\u00e3o eficaz. Por exemplo, voc\u00ea tem um diret\u00f3rio cheio de relat\u00f3rios de vendas, e descobriu que por um erro na gera\u00e7\u00e3o, todas as datas sa\u00edram erradas, com o ano de 1999 onde era para ser 2000 . Num editor de textos normal, voc\u00ea tem que abrir os relat\u00f3rios um por um e alterar o ano em todas as ocorr\u00eancias. Certo, isso n\u00e3o \u00e9 t\u00e3o complexo se o editor de textos possuir uma ferramenta de procura e troca, tamb\u00e9m chamado de substitui\u00e7\u00e3o. Mas ent\u00e3o suponhamos que o erro da data n\u00e3o seja o ano, e sim o formato , tendo sa\u00eddo como mm/dd/aaaa quando deveria ser dd/mm/aaaa . Aqui n\u00e3o \u00e9 uma substitui\u00e7\u00e3o e sim uma troca de lugares, e uma ferramenta simples de procura e troca n\u00e3o poder\u00e1 ajudar. Esse \u00e9 um caso t\u00edpico onde o Sed mostra seu poder: altera\u00e7\u00f5es complexas em v\u00e1rios arquivos. Utilizando o Sed , a solu\u00e7\u00e3o para este problema (que veremos adiante) \u00e9 at\u00e9 simples, bastando definir uma s\u00e9rie de regras de procura e troca, e o programa se encarregar\u00e1 de execut\u00e1-las e arrumar os relat\u00f3rios. 2.3.2. Quando n\u00e3o usar o Sed Nenhuma ferramenta \u00e9 ideal para todas as tarefas, e o Sed n\u00e3o \u00e9 uma exce\u00e7\u00e3o \u00e0 regra. Edi\u00e7\u00e3o gen\u00e9rica de textos Ele n\u00e3o \u00e9 pr\u00e1tico para ser utilizado como editor de textos de uso gen\u00e9rico. Para escrever textos, ou alterar coisas simples, \u00e9 mais r\u00e1pido e f\u00e1cil abrir um editor de textos interativo como o vi ou o emacs e fazer a altera\u00e7\u00e3o \"na m\u00e3o\". Programa\u00e7\u00e3o avan\u00e7ada O Sed n\u00e3o \u00e9 uma linguagem de programa\u00e7\u00e3o completa, pois n\u00e3o possui vari\u00e1veis, fun\u00e7\u00f5es matem\u00e1ticas, intera\u00e7\u00e3o com o sistema operacional, entre outras limita\u00e7\u00f5es. Mas bem, ele \u00e9 um manipulador de texto e n\u00e3o uma linguagem de uso geral. Algumas estruturas complexas podem ser simuladas com alguma t\u00e9cnica, mas se o seu programa em Sed come\u00e7ou a inchar muito, \u00e9 aconselh\u00e1vel reescrev\u00ea-lo numa linguagem com mais recursos, como o perl .","title":"2. Conhecendo o sed"},{"location":"Cap02-Conhecendo-o-sed.html#2-conhecendo-o-sed","text":"Vamos conhecer um pouco o Sed , mostrar que ele n\u00e3o \u00e9 o bicho de Sed cabe\u00e7as que aparenta :)","title":"2. Conhecendo o sed"},{"location":"Cap02-Conhecendo-o-sed.html#21-descricao-do-sed","text":"O Sed \u00e9 um editor de textos n\u00e3o interativo . Ele pode editar automaticamente, sem intera\u00e7\u00e3o do usu\u00e1rio, v\u00e1rios arquivos seguindo um conjunto de regras especificadas.","title":"2.1. Descri\u00e7\u00e3o do Sed"},{"location":"Cap02-Conhecendo-o-sed.html#22-o-que-significa-a-palavra-sed","text":"Vem do ingl\u00eas \"Stream EDitor\", ou seja, editor de fluxos (de texto).","title":"2.2. O que significa a palavra Sed"},{"location":"Cap02-Conhecendo-o-sed.html#23-como-saber-se-devo-usar-o-sed","text":"Sendo um editor de textos n\u00e3o interativo, o Sed \u00e9 excelente para desempenhar algumas tarefas, mas em outras seu uso n\u00e3o \u00e9 aconselhado.","title":"2.3. Como saber se devo usar o Sed"},{"location":"Cap02-Conhecendo-o-sed.html#231-quando-usar-o-sed","text":"A caracter\u00edstica principal do Sed \u00e9 poder editar arquivos automaticamente. Ent\u00e3o sempre que voc\u00ea precisar fazer altera\u00e7\u00f5es sistem\u00e1ticas em v\u00e1rios arquivos, o Sed \u00e9 uma solu\u00e7\u00e3o eficaz. Por exemplo, voc\u00ea tem um diret\u00f3rio cheio de relat\u00f3rios de vendas, e descobriu que por um erro na gera\u00e7\u00e3o, todas as datas sa\u00edram erradas, com o ano de 1999 onde era para ser 2000 . Num editor de textos normal, voc\u00ea tem que abrir os relat\u00f3rios um por um e alterar o ano em todas as ocorr\u00eancias. Certo, isso n\u00e3o \u00e9 t\u00e3o complexo se o editor de textos possuir uma ferramenta de procura e troca, tamb\u00e9m chamado de substitui\u00e7\u00e3o. Mas ent\u00e3o suponhamos que o erro da data n\u00e3o seja o ano, e sim o formato , tendo sa\u00eddo como mm/dd/aaaa quando deveria ser dd/mm/aaaa . Aqui n\u00e3o \u00e9 uma substitui\u00e7\u00e3o e sim uma troca de lugares, e uma ferramenta simples de procura e troca n\u00e3o poder\u00e1 ajudar. Esse \u00e9 um caso t\u00edpico onde o Sed mostra seu poder: altera\u00e7\u00f5es complexas em v\u00e1rios arquivos. Utilizando o Sed , a solu\u00e7\u00e3o para este problema (que veremos adiante) \u00e9 at\u00e9 simples, bastando definir uma s\u00e9rie de regras de procura e troca, e o programa se encarregar\u00e1 de execut\u00e1-las e arrumar os relat\u00f3rios.","title":"2.3.1. Quando usar o Sed"},{"location":"Cap02-Conhecendo-o-sed.html#232-quando-nao-usar-o-sed","text":"Nenhuma ferramenta \u00e9 ideal para todas as tarefas, e o Sed n\u00e3o \u00e9 uma exce\u00e7\u00e3o \u00e0 regra. Edi\u00e7\u00e3o gen\u00e9rica de textos Ele n\u00e3o \u00e9 pr\u00e1tico para ser utilizado como editor de textos de uso gen\u00e9rico. Para escrever textos, ou alterar coisas simples, \u00e9 mais r\u00e1pido e f\u00e1cil abrir um editor de textos interativo como o vi ou o emacs e fazer a altera\u00e7\u00e3o \"na m\u00e3o\". Programa\u00e7\u00e3o avan\u00e7ada O Sed n\u00e3o \u00e9 uma linguagem de programa\u00e7\u00e3o completa, pois n\u00e3o possui vari\u00e1veis, fun\u00e7\u00f5es matem\u00e1ticas, intera\u00e7\u00e3o com o sistema operacional, entre outras limita\u00e7\u00f5es. Mas bem, ele \u00e9 um manipulador de texto e n\u00e3o uma linguagem de uso geral. Algumas estruturas complexas podem ser simuladas com alguma t\u00e9cnica, mas se o seu programa em Sed come\u00e7ou a inchar muito, \u00e9 aconselh\u00e1vel reescrev\u00ea-lo numa linguagem com mais recursos, como o perl .","title":"2.3.2. Quando n\u00e3o usar o Sed"},{"location":"Cap03-Perdendo-o-medo-do-sed.html","text":"3. Perdendo o medo do sed 3.1. Como ele funciona O Sed funciona como um filtro, por onde voc\u00ea passa um texto X e ele joga na sa\u00edda um texto Y . O texto X virou Y seguindo algumas regrinhas que voc\u00ea determinou. Pense no Sed como um processador de alimentos, dependendo da l\u00e2mina utilizada, a batata sai cortada de uma maneira diferente :) o Sed funciona como um filtro, ou conversor. o Sed \u00e9 orientado a linha, de cima para baixo, da esquerda para a direita. o Sed l\u00ea uma linha da entrada padr\u00e3o (STDIN) ou de um arquivo especificado, aplica os comandos de edi\u00e7\u00e3o e mostra o resultado na sa\u00edda padr\u00e3o (STDOUT). vai para a pr\u00f3xima linha e repete o processo. o Sed aceita endere\u00e7os para os comandos. o Sed aplica os comandos para todas as linhas caso um endere\u00e7o n\u00e3o seja especificado. o Sed faz uso intensivo de express\u00f5es regulares. o Sed \u00e9 macho :) 3.2. Sua sintaxe A sintaxe gen\u00e9rica de um comando Sed \u00e9: sed [op\u00e7\u00f5es] regras [arquivo] Sendo que regras tem a forma gen\u00e9rica de: [endere\u00e7o1 [, endere\u00e7o2]] comando [argumento] 3.2.1. Exemplo Como nota\u00e7\u00e3o tradicional, o que est\u00e1 [entre colchetes] \u00e9 opcional, ent\u00e3o a sintaxe Sed mais simples que existe \u00e9 sed regra como em: prompt$ cat texto.txt | sed p Ou seja, o Sed lendo da entrada padr\u00e3o o conte\u00fado do arquivo texto.txt via duto | , aplica o comando p para todas as linhas do arquivo, ou seja, as duplica. 3.2.2. Outros exemplos Um outro exemplo do Sed com op\u00e7\u00f5es e recebendo um arquivo como par\u00e2metro seria: prompt$ sed -n p texto.txt E ainda, agora especificando um endere\u00e7o para o comando p : prompt$ sed -n 5p texto.txt Ou seja, este comando imprime apenas a linha 5 do texto.txt 3.3. Como execut\u00e1-lo A execu\u00e7\u00e3o do Sed \u00e9 igual a de outro aplicativo qualquer de manipula\u00e7\u00e3o de texto, aceitando como par\u00e2metro um nome de arquivo, ou na falta deste, l\u00ea o texto da entrada padr\u00e3o , via duto | ou redirecionamento < . E como dica geral SEMPRE coloque os comandos do Sed entre aspas simples '' , para evitar que o shell os interprete erroneamente. Veja mais detalhes no t\u00f3pico Sed e shell . prompt$ sed 'p' texto.txt prompt$ cat texto.txt | sed 'p' prompt$ sed 'p' < texto.txt Com outra op\u00e7\u00e3o ainda, pode-se executar diretamente um arquivo com comandos Sed . Para mais informa\u00e7\u00f5es, veja o Tornando arquivos Sed execut\u00e1veis .","title":"3. Perdendo o medo do sed"},{"location":"Cap03-Perdendo-o-medo-do-sed.html#3-perdendo-o-medo-do-sed","text":"","title":"3. Perdendo o medo do sed"},{"location":"Cap03-Perdendo-o-medo-do-sed.html#31-como-ele-funciona","text":"O Sed funciona como um filtro, por onde voc\u00ea passa um texto X e ele joga na sa\u00edda um texto Y . O texto X virou Y seguindo algumas regrinhas que voc\u00ea determinou. Pense no Sed como um processador de alimentos, dependendo da l\u00e2mina utilizada, a batata sai cortada de uma maneira diferente :) o Sed funciona como um filtro, ou conversor. o Sed \u00e9 orientado a linha, de cima para baixo, da esquerda para a direita. o Sed l\u00ea uma linha da entrada padr\u00e3o (STDIN) ou de um arquivo especificado, aplica os comandos de edi\u00e7\u00e3o e mostra o resultado na sa\u00edda padr\u00e3o (STDOUT). vai para a pr\u00f3xima linha e repete o processo. o Sed aceita endere\u00e7os para os comandos. o Sed aplica os comandos para todas as linhas caso um endere\u00e7o n\u00e3o seja especificado. o Sed faz uso intensivo de express\u00f5es regulares. o Sed \u00e9 macho :)","title":"3.1. Como ele funciona"},{"location":"Cap03-Perdendo-o-medo-do-sed.html#32-sua-sintaxe","text":"A sintaxe gen\u00e9rica de um comando Sed \u00e9: sed [op\u00e7\u00f5es] regras [arquivo] Sendo que regras tem a forma gen\u00e9rica de: [endere\u00e7o1 [, endere\u00e7o2]] comando [argumento]","title":"3.2. Sua sintaxe"},{"location":"Cap03-Perdendo-o-medo-do-sed.html#321-exemplo","text":"Como nota\u00e7\u00e3o tradicional, o que est\u00e1 [entre colchetes] \u00e9 opcional, ent\u00e3o a sintaxe Sed mais simples que existe \u00e9 sed regra como em: prompt$ cat texto.txt | sed p Ou seja, o Sed lendo da entrada padr\u00e3o o conte\u00fado do arquivo texto.txt via duto | , aplica o comando p para todas as linhas do arquivo, ou seja, as duplica.","title":"3.2.1. Exemplo"},{"location":"Cap03-Perdendo-o-medo-do-sed.html#322-outros-exemplos","text":"Um outro exemplo do Sed com op\u00e7\u00f5es e recebendo um arquivo como par\u00e2metro seria: prompt$ sed -n p texto.txt E ainda, agora especificando um endere\u00e7o para o comando p : prompt$ sed -n 5p texto.txt Ou seja, este comando imprime apenas a linha 5 do texto.txt","title":"3.2.2. Outros exemplos"},{"location":"Cap03-Perdendo-o-medo-do-sed.html#33-como-executa-lo","text":"A execu\u00e7\u00e3o do Sed \u00e9 igual a de outro aplicativo qualquer de manipula\u00e7\u00e3o de texto, aceitando como par\u00e2metro um nome de arquivo, ou na falta deste, l\u00ea o texto da entrada padr\u00e3o , via duto | ou redirecionamento < . E como dica geral SEMPRE coloque os comandos do Sed entre aspas simples '' , para evitar que o shell os interprete erroneamente. Veja mais detalhes no t\u00f3pico Sed e shell . prompt$ sed 'p' texto.txt prompt$ cat texto.txt | sed 'p' prompt$ sed 'p' < texto.txt Com outra op\u00e7\u00e3o ainda, pode-se executar diretamente um arquivo com comandos Sed . Para mais informa\u00e7\u00f5es, veja o Tornando arquivos Sed execut\u00e1veis .","title":"3.3. Como execut\u00e1-lo"},{"location":"Cap04-Os-comandos-do-sed.html","text":"4. Os comandos do sed 4.1. Descri\u00e7\u00e3o de todos os comandos prompt$ man sed prompt$ pinfo sed Ou num resumo r\u00e1pido: Legenda: [ARQUIVO] arquivo ou fluxo de texto (via pipe) original a ser modificado [TEXTO] trecho de texto. pode ser uma palavra, uma linha, v\u00e1rias separadas por \\n, ou mesmo um vazio. [PADR\u00c3O] [TEXTO] contido no ESPA\u00c7O PADR\u00c3O = imprime o n\u00famero da linha atual do [ARQUIVO] # inicia um coment\u00e1rio ! inverte a l\u00f3gica do comando ; separador de comandos , separador de faixas de endere\u00e7o { in\u00edcio de bloco de comandos } fim de bloco de comandos s substitui um trecho de texto por outro y traduz um caractere por outro i insere um texto antes da linha atual c troca a linha atual por um texto a anexa um texto ap\u00f3s a linha atual g restaura o [TEXTO] contido no ESPA\u00c7O RESERVA (sobrescrevendo) G restaura o [TEXTO] contido no ESPA\u00c7O RESERVA (anexando) h guarda o [PADR\u00c3O] no ESPA\u00c7O RESERVA (sobrescrevendo) H guarda o [PADR\u00c3O] no ESPA\u00c7O RESERVA (anexando) x troca os conte\u00fados dos ESPA\u00c7O PADR\u00c3O e RESERVA p imprime o [PADR\u00c3O] P imprime a primeira linha do [PADR\u00c3O] l imprime o [PADR\u00c3O] mostrando caracteres brancos r inclui conte\u00fado de um arquivo antes da linha atual w grava o [PADR\u00c3O] num arquivo : define uma marca\u00e7\u00e3o b pula at\u00e9 uma marca\u00e7\u00e3o t pula at\u00e9 uma marca\u00e7\u00e3o, se o \u00faltimo s/// funcionou (condicional) d apaga o [PADR\u00c3O] D apaga a primeira linha do [PADR\u00c3O] n vai para a pr\u00f3xima linha N anexa a pr\u00f3xima linha no [PADR\u00c3O] q finaliza o Sed imediatamente 4.2. Lista de todos os comandos por categoria informa\u00e7\u00f5es = marcadores : coment\u00e1rios # comandos de edi\u00e7\u00e3o s i c a y comandos de registradores g G h H x comandos de impress\u00e3o p P l comandos de arquivo r w modificadores g i ! separadores ; -e \\n controle de fluxo b t d D n N q endere\u00e7o // , limitadores {} \\(\\) registradores din\u00e2micos \\1 \\2 ... \\9","title":"4. Os comandos do sed"},{"location":"Cap04-Os-comandos-do-sed.html#4-os-comandos-do-sed","text":"","title":"4. Os comandos do sed"},{"location":"Cap04-Os-comandos-do-sed.html#41-descricao-de-todos-os-comandos","text":"prompt$ man sed prompt$ pinfo sed Ou num resumo r\u00e1pido: Legenda: [ARQUIVO] arquivo ou fluxo de texto (via pipe) original a ser modificado [TEXTO] trecho de texto. pode ser uma palavra, uma linha, v\u00e1rias separadas por \\n, ou mesmo um vazio. [PADR\u00c3O] [TEXTO] contido no ESPA\u00c7O PADR\u00c3O = imprime o n\u00famero da linha atual do [ARQUIVO] # inicia um coment\u00e1rio ! inverte a l\u00f3gica do comando ; separador de comandos , separador de faixas de endere\u00e7o { in\u00edcio de bloco de comandos } fim de bloco de comandos s substitui um trecho de texto por outro y traduz um caractere por outro i insere um texto antes da linha atual c troca a linha atual por um texto a anexa um texto ap\u00f3s a linha atual g restaura o [TEXTO] contido no ESPA\u00c7O RESERVA (sobrescrevendo) G restaura o [TEXTO] contido no ESPA\u00c7O RESERVA (anexando) h guarda o [PADR\u00c3O] no ESPA\u00c7O RESERVA (sobrescrevendo) H guarda o [PADR\u00c3O] no ESPA\u00c7O RESERVA (anexando) x troca os conte\u00fados dos ESPA\u00c7O PADR\u00c3O e RESERVA p imprime o [PADR\u00c3O] P imprime a primeira linha do [PADR\u00c3O] l imprime o [PADR\u00c3O] mostrando caracteres brancos r inclui conte\u00fado de um arquivo antes da linha atual w grava o [PADR\u00c3O] num arquivo : define uma marca\u00e7\u00e3o b pula at\u00e9 uma marca\u00e7\u00e3o t pula at\u00e9 uma marca\u00e7\u00e3o, se o \u00faltimo s/// funcionou (condicional) d apaga o [PADR\u00c3O] D apaga a primeira linha do [PADR\u00c3O] n vai para a pr\u00f3xima linha N anexa a pr\u00f3xima linha no [PADR\u00c3O] q finaliza o Sed imediatamente","title":"4.1. Descri\u00e7\u00e3o de todos os comandos"},{"location":"Cap04-Os-comandos-do-sed.html#42-lista-de-todos-os-comandos-por-categoria","text":"informa\u00e7\u00f5es = marcadores : coment\u00e1rios # comandos de edi\u00e7\u00e3o s i c a y comandos de registradores g G h H x comandos de impress\u00e3o p P l comandos de arquivo r w modificadores g i ! separadores ; -e \\n controle de fluxo b t d D n N q endere\u00e7o // , limitadores {} \\(\\) registradores din\u00e2micos \\1 \\2 ... \\9","title":"4.2. Lista de todos os comandos por categoria"},{"location":"Cap05-Conceitos-b\u00e1sicos.html","text":"5. Conceitos b\u00e1sicos Aqui v\u00e3o conhecimentos que voc\u00ea precisa assimilar para fazer um bom uso do Sed . 5.1. Suprimindo a sa\u00edda padr\u00e3o 5.1.1. Sa\u00edda normal Normalmente o Sed sempre imprime na sa\u00edda padr\u00e3o todas as linhas do arquivo, modificadas ou n\u00e3o. Veja o primeiro exemplo citado: prompt$ sed 'p' texto.txt O comando p imprime a linha na sa\u00edda padr\u00e3o. Este exemplo duplica todas as linhas do arquivo pois, al\u00e9m da impress\u00e3o normal de cada linha, ainda \u00e9 aplicado o comando p em cada uma, que diz \"imprima esta linha\", fazendo com que ela apare\u00e7a duas vezes. 5.1.2. Sa\u00edda suprimida Temos como modificar este comportamento com a op\u00e7\u00e3o -n , que significa \"n\u00e3o imprima na sa\u00edda, a n\u00e3o ser quando especificado com o comando p ou o l \". Assim sendo, colocando o -n , eliminamos o comportamento padr\u00e3o de \"imprimir sempre na sa\u00edda\": prompt$ sed -n 'p' texto.txt Que resulta no conte\u00fado do arquivo, pois cada linha \u00e9 impressa apenas uma vez, devido ao comando p . Assim fica f\u00e1cil entender como funciona o exemplo j\u00e1 citado que imprime apenas a linha 5 de um arquivo: prompt$ sed -n 5p texto.txt Ok, a explica\u00e7\u00e3o daquele 5 ali perdido vem logo a seguir no t\u00f3pico O endere\u00e7o :) 5.2. O endere\u00e7o O endere\u00e7o serve para voc\u00ea dizer ao Sed para aplicar um determinado comando apenas nas linhas informadas. Este endere\u00e7o pode ser descrito direto como o n\u00famero da linha, ou por parte de seu conte\u00fado (entre /barras/ ). Caso o endere\u00e7o n\u00e3o seja informado, o comando Sed ser\u00e1 aplicado para todas as linhas. 5.2.1. Endere\u00e7o simples Por exemplo, referenciando a linha pelo seu n\u00famero, como j\u00e1 foi visto anteriormente: prompt$ sed '5d' texto.txt Mas tamb\u00e9m poderia ser uma linha que tivesse uma palavra qualquer: prompt$ sed '/estorvo/d' texto.txt O comando d apaga linhas segundo o endere\u00e7o, ent\u00e3o este comando apagar\u00e1 todas as linhas que tiverem a palavra estorvo . Este exemplo tem o funcionamento id\u00eantico ao comando: prompt$ grep -v estorvo texto.txt 5.2.2. Intervalo Como endere\u00e7o, ainda se pode especificar um intervalo , como da linha 5 at\u00e9 a linha 10, ou da linha 5 at\u00e9 a linha que tiver a palavra estorvo : prompt$ sed '5,10d' texto.txt prompt$ sed '5,/estorvo/d' texto.txt No endere\u00e7o, temos um caractere especial, o $ que referencia \u00e0 \u00faltima linha do texto. Assim sendo, para apagar da linha 10 at\u00e9 o final do texto, o comando \u00e9: prompt$ sed '10,$d' texto.txt 5.2.3. Outros No Sed da GNU, a partir da vers\u00e3o 3.02a (*), foi adicionada uma maneira nova de especificar um endere\u00e7o: prompt$ sed '/estorvo/,+3d' texto.txt Que referencia a linha que cont\u00e9m a palavra estorvo e mais as 3 linhas seguintes. E pra finalizar, como j\u00e1 dito anteriormente, quando o comando n\u00e3o tem endere\u00e7o, \u00e9 aplicado para todas as linhas: prompt$ sed 'd' texto.txt (*) veja o t\u00f3pico Nota sobre os adicionais GNU 5.3. Interrompendo o processamento A qualquer hora voc\u00ea pode abortar o comando Sed com o comando q . Isso \u00e9 \u00fatil no nosso exemplo anterior de emular o comando head , imprimindo apenas as 10 primeiras linhas do arquivo: sed '10q' # ao chegar na linha 10, pare. Ou ainda, para obter apenas os cabe\u00e7alhos de uma mensagem de e-mail, que s\u00e3o separados do corpo da mensagem por uma linha em branco: sed '/^$/q' # pare na primeira linha em branco que achar 5.4. Invertendo a l\u00f3gica No Sed temos o modificador ! que inverte a l\u00f3gica do comando, ou seja !comando significa \"n\u00e3o execute o comando\". \u00c9 meio estranho a primeira vista, mas voc\u00ea tem que come\u00e7ar a pensar como o Sed , e tudo se esclarece :) Temos o comando head que imprime as 10 primeiras linhas de um arquivo. Com as dicas j\u00e1 vistas, podemos fazer esta tarefa com o Sed assim: sed -n '1,10p' # imprima apenas da linha 1 at\u00e9 a 10 sed '11,$d' # apague da linha 11 at\u00e9 o final Ou ainda, podemos inverter a l\u00f3gica e fazer: sed '1,10!d' # N\u00c3O apague da linha 1 at\u00e9 a 10 (ou seja, apague as outras) sed -n '11,$!p' # N\u00c3O imprima da linha 11 at\u00e9 o final (ou seja, imprima as outras) A dica \u00e9 sempre complementar a leitura mental com o inverso (entre par\u00eanteses nos exemplos), ou seja, se o Sed N\u00c3O vai aplicar um comando em determinadas linhas, isso quer dizer implicitamente que este comando ser\u00e1 aplicado em todas as outras linhas. \u00c9 estranho, mas acostuma :) 5.5. Aplicando v\u00e1rios comandos de uma vez 5.5.1. Comandos normais \u00c9 poss\u00edvel aplicar v\u00e1rios comandos Sed , em seq\u00fc\u00eancia . Basta separ\u00e1-los por ponto-e-v\u00edrgula. prompt$ sed '5d;10d;/estorvo/d' texto.txt Este comando apaga as linhas 5, 10 e as que t\u00eam estorvo do arquivo texto.txt . 5.5.2. Comandos com par\u00e2metros Os comandos que recebem par\u00e2metros (r, w, i, a, c) , n\u00e3o aceitam o ponto-e-v\u00edrgula como separador, pois este pode ser parte integrante do par\u00e2metro esperado. Estes comandos devem ser separados dos restantes, sendo passados como comandos isolados, pela op\u00e7\u00e3o de linha de comando -e : prompt$ sed -e '1i come\u00e7o de tudo' -e '5d' texto.txt Este comando insere a frase come\u00e7o de tudo antes da primeira linha e apaga a quinta linha do arquivo texto.txt. 5.5.3. Terceira via Outra maneira de especificar v\u00e1rios comandos (e a mais consistente e garantida) \u00e9 coloc\u00e1-los num arquivo, um por linha. Veja o t\u00f3pico Colocando comandos Sed num arquivo .","title":"5. Conceitos b\u00e1sicos"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#5-conceitos-basicos","text":"Aqui v\u00e3o conhecimentos que voc\u00ea precisa assimilar para fazer um bom uso do Sed .","title":"5. Conceitos b\u00e1sicos"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#51-suprimindo-a-saida-padrao","text":"","title":"5.1. Suprimindo a sa\u00edda padr\u00e3o"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#511-saida-normal","text":"Normalmente o Sed sempre imprime na sa\u00edda padr\u00e3o todas as linhas do arquivo, modificadas ou n\u00e3o. Veja o primeiro exemplo citado: prompt$ sed 'p' texto.txt O comando p imprime a linha na sa\u00edda padr\u00e3o. Este exemplo duplica todas as linhas do arquivo pois, al\u00e9m da impress\u00e3o normal de cada linha, ainda \u00e9 aplicado o comando p em cada uma, que diz \"imprima esta linha\", fazendo com que ela apare\u00e7a duas vezes.","title":"5.1.1. Sa\u00edda normal"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#512-saida-suprimida","text":"Temos como modificar este comportamento com a op\u00e7\u00e3o -n , que significa \"n\u00e3o imprima na sa\u00edda, a n\u00e3o ser quando especificado com o comando p ou o l \". Assim sendo, colocando o -n , eliminamos o comportamento padr\u00e3o de \"imprimir sempre na sa\u00edda\": prompt$ sed -n 'p' texto.txt Que resulta no conte\u00fado do arquivo, pois cada linha \u00e9 impressa apenas uma vez, devido ao comando p . Assim fica f\u00e1cil entender como funciona o exemplo j\u00e1 citado que imprime apenas a linha 5 de um arquivo: prompt$ sed -n 5p texto.txt Ok, a explica\u00e7\u00e3o daquele 5 ali perdido vem logo a seguir no t\u00f3pico O endere\u00e7o :)","title":"5.1.2. Sa\u00edda suprimida"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#52-o-endereco","text":"O endere\u00e7o serve para voc\u00ea dizer ao Sed para aplicar um determinado comando apenas nas linhas informadas. Este endere\u00e7o pode ser descrito direto como o n\u00famero da linha, ou por parte de seu conte\u00fado (entre /barras/ ). Caso o endere\u00e7o n\u00e3o seja informado, o comando Sed ser\u00e1 aplicado para todas as linhas.","title":"5.2. O endere\u00e7o"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#521-endereco-simples","text":"Por exemplo, referenciando a linha pelo seu n\u00famero, como j\u00e1 foi visto anteriormente: prompt$ sed '5d' texto.txt Mas tamb\u00e9m poderia ser uma linha que tivesse uma palavra qualquer: prompt$ sed '/estorvo/d' texto.txt O comando d apaga linhas segundo o endere\u00e7o, ent\u00e3o este comando apagar\u00e1 todas as linhas que tiverem a palavra estorvo . Este exemplo tem o funcionamento id\u00eantico ao comando: prompt$ grep -v estorvo texto.txt","title":"5.2.1. Endere\u00e7o simples"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#522-intervalo","text":"Como endere\u00e7o, ainda se pode especificar um intervalo , como da linha 5 at\u00e9 a linha 10, ou da linha 5 at\u00e9 a linha que tiver a palavra estorvo : prompt$ sed '5,10d' texto.txt prompt$ sed '5,/estorvo/d' texto.txt No endere\u00e7o, temos um caractere especial, o $ que referencia \u00e0 \u00faltima linha do texto. Assim sendo, para apagar da linha 10 at\u00e9 o final do texto, o comando \u00e9: prompt$ sed '10,$d' texto.txt","title":"5.2.2. Intervalo"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#523-outros","text":"No Sed da GNU, a partir da vers\u00e3o 3.02a (*), foi adicionada uma maneira nova de especificar um endere\u00e7o: prompt$ sed '/estorvo/,+3d' texto.txt Que referencia a linha que cont\u00e9m a palavra estorvo e mais as 3 linhas seguintes. E pra finalizar, como j\u00e1 dito anteriormente, quando o comando n\u00e3o tem endere\u00e7o, \u00e9 aplicado para todas as linhas: prompt$ sed 'd' texto.txt (*) veja o t\u00f3pico Nota sobre os adicionais GNU","title":"5.2.3. Outros"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#53-interrompendo-o-processamento","text":"A qualquer hora voc\u00ea pode abortar o comando Sed com o comando q . Isso \u00e9 \u00fatil no nosso exemplo anterior de emular o comando head , imprimindo apenas as 10 primeiras linhas do arquivo: sed '10q' # ao chegar na linha 10, pare. Ou ainda, para obter apenas os cabe\u00e7alhos de uma mensagem de e-mail, que s\u00e3o separados do corpo da mensagem por uma linha em branco: sed '/^$/q' # pare na primeira linha em branco que achar","title":"5.3. Interrompendo o processamento"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#54-invertendo-a-logica","text":"No Sed temos o modificador ! que inverte a l\u00f3gica do comando, ou seja !comando significa \"n\u00e3o execute o comando\". \u00c9 meio estranho a primeira vista, mas voc\u00ea tem que come\u00e7ar a pensar como o Sed , e tudo se esclarece :) Temos o comando head que imprime as 10 primeiras linhas de um arquivo. Com as dicas j\u00e1 vistas, podemos fazer esta tarefa com o Sed assim: sed -n '1,10p' # imprima apenas da linha 1 at\u00e9 a 10 sed '11,$d' # apague da linha 11 at\u00e9 o final Ou ainda, podemos inverter a l\u00f3gica e fazer: sed '1,10!d' # N\u00c3O apague da linha 1 at\u00e9 a 10 (ou seja, apague as outras) sed -n '11,$!p' # N\u00c3O imprima da linha 11 at\u00e9 o final (ou seja, imprima as outras) A dica \u00e9 sempre complementar a leitura mental com o inverso (entre par\u00eanteses nos exemplos), ou seja, se o Sed N\u00c3O vai aplicar um comando em determinadas linhas, isso quer dizer implicitamente que este comando ser\u00e1 aplicado em todas as outras linhas. \u00c9 estranho, mas acostuma :)","title":"5.4. Invertendo a l\u00f3gica"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#55-aplicando-varios-comandos-de-uma-vez","text":"","title":"5.5. Aplicando v\u00e1rios comandos de uma vez"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#551-comandos-normais","text":"\u00c9 poss\u00edvel aplicar v\u00e1rios comandos Sed , em seq\u00fc\u00eancia . Basta separ\u00e1-los por ponto-e-v\u00edrgula. prompt$ sed '5d;10d;/estorvo/d' texto.txt Este comando apaga as linhas 5, 10 e as que t\u00eam estorvo do arquivo texto.txt .","title":"5.5.1. Comandos normais"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#552-comandos-com-parametros","text":"Os comandos que recebem par\u00e2metros (r, w, i, a, c) , n\u00e3o aceitam o ponto-e-v\u00edrgula como separador, pois este pode ser parte integrante do par\u00e2metro esperado. Estes comandos devem ser separados dos restantes, sendo passados como comandos isolados, pela op\u00e7\u00e3o de linha de comando -e : prompt$ sed -e '1i come\u00e7o de tudo' -e '5d' texto.txt Este comando insere a frase come\u00e7o de tudo antes da primeira linha e apaga a quinta linha do arquivo texto.txt.","title":"5.5.2. Comandos com par\u00e2metros"},{"location":"Cap05-Conceitos-b\u00e1sicos.html#553-terceira-via","text":"Outra maneira de especificar v\u00e1rios comandos (e a mais consistente e garantida) \u00e9 coloc\u00e1-los num arquivo, um por linha. Veja o t\u00f3pico Colocando comandos Sed num arquivo .","title":"5.5.3. Terceira via"},{"location":"Cap06-Conceitos-complementares.html","text":"6. Conceitos complementares Estes s\u00e3o conhecimentos que possivelmente surgir\u00e3o como d\u00favidas em sua cabe\u00e7a ap\u00f3s utilizar o Sed por um tempo. 6.1. Sed e shell Com o Sed sendo invocado na linha de comando, deve-se ter alguns cuidados para evitar transtornos. O interpretador de comandos (shell), interpreta a linha de comando antes de process\u00e1-la, ent\u00e3o alguns caracteres especiais como $ , \\ e ! , s\u00e3o interpretados pelo shell antes de chegarem ao Sed , modificando o comportamento esperado. Para evitar isso coloque os comandos Sed sempre entre aspas simples: prompt$ sed 's/isso/aquilo/' texto.txt Salvo quando no meio do comando Sed , existir algo que deva ser interpretado, como uma vari\u00e1vel por exemplo. Neste caso coloque os comandos entre aspas duplas: prompt$ sed \"s/$HOME/aquilo/\" texto.txt Ou ainda, para evitar completamente a interpreta\u00e7\u00e3o do shell, sem se preocupar com aspas, coloque os comandos Sed num arquivo. Veja o t\u00f3pico Colocando comandos Sed num arquivo . 6.2. Usando outros delimitadores 6.2.1. No comando s \u00c9 comum ao fazer um comando de substitui\u00e7\u00e3o s/// conter uma / num dos dois lados do comando, como quando querendo substituir /usr/local/bin por /usr/bin . Sendo a barra o delimitador do comando s as outras barras comuns devem ser escapadas com a barra invertida \\ , para n\u00e3o serem confundidas com os delimitadores normais, ficando o monstro a seguir: prompt$ sed 's/\\/usr\\/local\\/bin/\\/usr\\/bin/' texto.txt Para evitar ter que ficar se escapando todas estas barras, basta lembrar que o comando s aceita qualquer delimitador, sendo a barra apenas um padr\u00e3o de refer\u00eancias hist\u00f3ricas. Ent\u00e3o, neste caso, poder\u00edamos escolher outro delimitador como por exemplo a v\u00edrgula: prompt$ sed 's,/usr/local/bin,/usr/bin,' texto.txt Evitando-se de ter que ficar escapando as barras. A mesma dica vale para o comando y . 6.2.2. No endere\u00e7o E se precis\u00e1ssemos apagar as linhas que cont\u00e9m o /usr/local/bin ? Ter\u00edamos que colocar o nome do diret\u00f3rio no endere\u00e7o do comando d , voltando com a festa dos escapes: prompt$ sed '/\\/usr\\/local\\/bin/d' texto.txt Para usarmos outro delimitador no endere\u00e7o, basta escaparmos o primeiro, que no caso abaixo \u00e9 a v\u00edrgula: prompt$ sed '\\,/usr/local/bin,d' texto.txt Confus\u00e3o de delimitadores com o texto a ser procurado \u00e9 muito comum de acontecer, ent\u00e3o se algo n\u00e3o est\u00e1 funcionando como deveria, olhe com cuidado para ver se n\u00e3o h\u00e1 conflitos entre eles. 6.3. Escapes para caracteres especiais No Sed da GNU, a partir da vers\u00e3o 3.02.80 (*), v\u00e1rios escapes novos foram adicionados e podem ser usados nas duas partes do comando s/// : \\a beep (apito) \\f form-feed (avan\u00e7a linha) \\n newline (quebra de linha) \\r carriage-return (retorno de carro) \\t hTAB (tabula\u00e7\u00e3o horizontal) \\v vTAB (tabula\u00e7\u00e3o vertical) \\oNNN o caractere de valor octal NNN \\dNNN o caractere de valor decimal NNN \\xNN o caractere de valor hexadecimal NN (*) veja o t\u00f3pico Nota sobre os adicionais GNU 6.4. Gravando o resultado no mesmo arquivo 6.4.1. Problema inicial O procedimento comum quando se quer gravar num arquivo o resultado de um comando Sed , \u00e9 o redirecionamento: prompt$ sed 'comando' texto.txt > texto-alterado.txt Mas \u00e9 muito comum, ao alterarmos um arquivo, queremos gravar estas altera\u00e7\u00f5es no pr\u00f3prio arquivo original. A tentativa intuitiva seria: prompt$ sed 'comando' texto.txt > texto.txt Mas \u00e9 s\u00f3 fazer para ver. Al\u00e9m de n\u00e3o dar certo, voc\u00ea ainda perder\u00e1 todo o conte\u00fado do arquivo. Isso acontece porque ao fazer o redirecionamento > , o shell abre imediatamente o arquivo referenciado, antes mesmo de come\u00e7ar a executar o comando Sed . E como este \u00e9 um redirecionamento destrutivo > e n\u00e3o incremental >> , se o arquivo j\u00e1 existir, ele ser\u00e1 truncado, e seu conte\u00fado perdido. A essa altura, o Sed come\u00e7ar\u00e1 seu processamento j\u00e1 lendo um arquivo texto.txt vazio, e aplicados qualquer comandos Sed num arquivo vazio, o resultado ser\u00e1 o pr\u00f3prio arquivo vazio. 6.4.2. Solu\u00e7\u00e3o gen\u00e9rica Para evitar isso, voltamos a primeira t\u00e1tica de gravar o resultado num outro arquivo, e depois o mais natural \u00e9 mover o arquivo novo sobre o original: prompt$ sed 'comando' texto.txt > texto-alterado.txt prompt$ mv texto-alterado.txt texto.txt Para a grande maioria dos casos, isso \u00e9 suficiente, mas conv\u00e9m aqui lembrar que caso o arquivo 'texto.txt' possua atributos especiais, grupo diferente do padr\u00e3o do usu\u00e1rio, ou refer\u00eancias (links, simb\u00f3licos ou n\u00e3o) para outros arquivos, tudo isso ser\u00e1 perdido . Ao mover o arquivo rec\u00e9m-criado, com os atributos padr\u00e3o do sistema, sobre o original, este perder\u00e1 seus atributos e ficar\u00e1 com os padr\u00f5es do sistema, herdado do arquivo novo. 6.4.3. Solu\u00e7\u00e3o segura Para evitar isso, a abordagem mais ortodoxa e segura seria aplicar o comando Sed numa c\u00f3pia e gravar o resultado no arquivo original via redirecionamento: prompt$ cp -a texto.txt texto-tmp.txt prompt$ sed 'comando' texto-tmp.txt > texto.txt prompt$ rm texto-tmp.txt Novamente, isso s\u00f3 \u00e9 necess\u00e1rio com arquivos especiais, sen\u00e3o a solu\u00e7\u00e3o com o mv pode ser usada. Mas \u00e9 importante ter em mente esta outra maneira e principalmente saber o porque de utiliz\u00e1-la, sendo este conhecimento aplic\u00e1vel a qualquer outro comando do sistema que leia e grave arquivos.","title":"6. Conceitos complementares"},{"location":"Cap06-Conceitos-complementares.html#6-conceitos-complementares","text":"Estes s\u00e3o conhecimentos que possivelmente surgir\u00e3o como d\u00favidas em sua cabe\u00e7a ap\u00f3s utilizar o Sed por um tempo.","title":"6. Conceitos complementares"},{"location":"Cap06-Conceitos-complementares.html#61-sed-e-shell","text":"Com o Sed sendo invocado na linha de comando, deve-se ter alguns cuidados para evitar transtornos. O interpretador de comandos (shell), interpreta a linha de comando antes de process\u00e1-la, ent\u00e3o alguns caracteres especiais como $ , \\ e ! , s\u00e3o interpretados pelo shell antes de chegarem ao Sed , modificando o comportamento esperado. Para evitar isso coloque os comandos Sed sempre entre aspas simples: prompt$ sed 's/isso/aquilo/' texto.txt Salvo quando no meio do comando Sed , existir algo que deva ser interpretado, como uma vari\u00e1vel por exemplo. Neste caso coloque os comandos entre aspas duplas: prompt$ sed \"s/$HOME/aquilo/\" texto.txt Ou ainda, para evitar completamente a interpreta\u00e7\u00e3o do shell, sem se preocupar com aspas, coloque os comandos Sed num arquivo. Veja o t\u00f3pico Colocando comandos Sed num arquivo .","title":"6.1. Sed e shell"},{"location":"Cap06-Conceitos-complementares.html#62-usando-outros-delimitadores","text":"","title":"6.2. Usando outros delimitadores"},{"location":"Cap06-Conceitos-complementares.html#621-no-comando-s","text":"\u00c9 comum ao fazer um comando de substitui\u00e7\u00e3o s/// conter uma / num dos dois lados do comando, como quando querendo substituir /usr/local/bin por /usr/bin . Sendo a barra o delimitador do comando s as outras barras comuns devem ser escapadas com a barra invertida \\ , para n\u00e3o serem confundidas com os delimitadores normais, ficando o monstro a seguir: prompt$ sed 's/\\/usr\\/local\\/bin/\\/usr\\/bin/' texto.txt Para evitar ter que ficar se escapando todas estas barras, basta lembrar que o comando s aceita qualquer delimitador, sendo a barra apenas um padr\u00e3o de refer\u00eancias hist\u00f3ricas. Ent\u00e3o, neste caso, poder\u00edamos escolher outro delimitador como por exemplo a v\u00edrgula: prompt$ sed 's,/usr/local/bin,/usr/bin,' texto.txt Evitando-se de ter que ficar escapando as barras. A mesma dica vale para o comando y .","title":"6.2.1. No comando s"},{"location":"Cap06-Conceitos-complementares.html#622-no-endereco","text":"E se precis\u00e1ssemos apagar as linhas que cont\u00e9m o /usr/local/bin ? Ter\u00edamos que colocar o nome do diret\u00f3rio no endere\u00e7o do comando d , voltando com a festa dos escapes: prompt$ sed '/\\/usr\\/local\\/bin/d' texto.txt Para usarmos outro delimitador no endere\u00e7o, basta escaparmos o primeiro, que no caso abaixo \u00e9 a v\u00edrgula: prompt$ sed '\\,/usr/local/bin,d' texto.txt Confus\u00e3o de delimitadores com o texto a ser procurado \u00e9 muito comum de acontecer, ent\u00e3o se algo n\u00e3o est\u00e1 funcionando como deveria, olhe com cuidado para ver se n\u00e3o h\u00e1 conflitos entre eles.","title":"6.2.2. No endere\u00e7o"},{"location":"Cap06-Conceitos-complementares.html#63-escapes-para-caracteres-especiais","text":"No Sed da GNU, a partir da vers\u00e3o 3.02.80 (*), v\u00e1rios escapes novos foram adicionados e podem ser usados nas duas partes do comando s/// : \\a beep (apito) \\f form-feed (avan\u00e7a linha) \\n newline (quebra de linha) \\r carriage-return (retorno de carro) \\t hTAB (tabula\u00e7\u00e3o horizontal) \\v vTAB (tabula\u00e7\u00e3o vertical) \\oNNN o caractere de valor octal NNN \\dNNN o caractere de valor decimal NNN \\xNN o caractere de valor hexadecimal NN (*) veja o t\u00f3pico Nota sobre os adicionais GNU","title":"6.3. Escapes para caracteres especiais"},{"location":"Cap06-Conceitos-complementares.html#64-gravando-o-resultado-no-mesmo-arquivo","text":"","title":"6.4. Gravando o resultado no mesmo arquivo"},{"location":"Cap06-Conceitos-complementares.html#641-problema-inicial","text":"O procedimento comum quando se quer gravar num arquivo o resultado de um comando Sed , \u00e9 o redirecionamento: prompt$ sed 'comando' texto.txt > texto-alterado.txt Mas \u00e9 muito comum, ao alterarmos um arquivo, queremos gravar estas altera\u00e7\u00f5es no pr\u00f3prio arquivo original. A tentativa intuitiva seria: prompt$ sed 'comando' texto.txt > texto.txt Mas \u00e9 s\u00f3 fazer para ver. Al\u00e9m de n\u00e3o dar certo, voc\u00ea ainda perder\u00e1 todo o conte\u00fado do arquivo. Isso acontece porque ao fazer o redirecionamento > , o shell abre imediatamente o arquivo referenciado, antes mesmo de come\u00e7ar a executar o comando Sed . E como este \u00e9 um redirecionamento destrutivo > e n\u00e3o incremental >> , se o arquivo j\u00e1 existir, ele ser\u00e1 truncado, e seu conte\u00fado perdido. A essa altura, o Sed come\u00e7ar\u00e1 seu processamento j\u00e1 lendo um arquivo texto.txt vazio, e aplicados qualquer comandos Sed num arquivo vazio, o resultado ser\u00e1 o pr\u00f3prio arquivo vazio.","title":"6.4.1. Problema inicial"},{"location":"Cap06-Conceitos-complementares.html#642-solucao-generica","text":"Para evitar isso, voltamos a primeira t\u00e1tica de gravar o resultado num outro arquivo, e depois o mais natural \u00e9 mover o arquivo novo sobre o original: prompt$ sed 'comando' texto.txt > texto-alterado.txt prompt$ mv texto-alterado.txt texto.txt Para a grande maioria dos casos, isso \u00e9 suficiente, mas conv\u00e9m aqui lembrar que caso o arquivo 'texto.txt' possua atributos especiais, grupo diferente do padr\u00e3o do usu\u00e1rio, ou refer\u00eancias (links, simb\u00f3licos ou n\u00e3o) para outros arquivos, tudo isso ser\u00e1 perdido . Ao mover o arquivo rec\u00e9m-criado, com os atributos padr\u00e3o do sistema, sobre o original, este perder\u00e1 seus atributos e ficar\u00e1 com os padr\u00f5es do sistema, herdado do arquivo novo.","title":"6.4.2. Solu\u00e7\u00e3o gen\u00e9rica"},{"location":"Cap06-Conceitos-complementares.html#643-solucao-segura","text":"Para evitar isso, a abordagem mais ortodoxa e segura seria aplicar o comando Sed numa c\u00f3pia e gravar o resultado no arquivo original via redirecionamento: prompt$ cp -a texto.txt texto-tmp.txt prompt$ sed 'comando' texto-tmp.txt > texto.txt prompt$ rm texto-tmp.txt Novamente, isso s\u00f3 \u00e9 necess\u00e1rio com arquivos especiais, sen\u00e3o a solu\u00e7\u00e3o com o mv pode ser usada. Mas \u00e9 importante ter em mente esta outra maneira e principalmente saber o porque de utiliz\u00e1-la, sendo este conhecimento aplic\u00e1vel a qualquer outro comando do sistema que leia e grave arquivos.","title":"6.4.3. Solu\u00e7\u00e3o segura"},{"location":"Cap07-Tarefas-diversas.html","text":"7. Tarefas diversas 7.1. Como substituir alguma coisa por uma quebra de linha No Sed da GNU, a partir da vers\u00e3o 3.02.80 (*), foi adicionado o \\n como escape v\u00e1lido dos dois lados do comando s/// . Com isso a tarefa de colocar cada palavra numa linha isolada, ou seja, trocar espa\u00e7os em branco por quebras de linha, fica trivial: prompt$ sed 's/ /\\n/g' texto.txt Mas com outras vers\u00f5es do Sed que n\u00e3o entendem este escape, a quebra de linha deve ser inserida literalmente e deve ser escapada: prompt$ sed 's/ /\\ prompt$ /g' texto.txt Como curiosidade, a opera\u00e7\u00e3o inversa, de colocar todas as linhas de um arquivo numa linha s\u00f3, j\u00e1 \u00e9 mais trabalhosa e utiliza o conceito de la\u00e7o : prompt$ sed ':a;$!N;s/\\n/ /g;ta' (*) veja o t\u00f3pico Nota sobre os adicionais GNU 7.2. Apagando linhas espec\u00edficas O comando para apagar linhas \u00e9 o d . O \u00fanico detalhe nesta tarefa \u00e9 especificar quais linhas voc\u00ea vai querer apagar. Isso est\u00e1 completamente coberto no t\u00f3pico O endere\u00e7o . 7.3. Como ignorar mai\u00fasculas e min\u00fasculas O jeito padr\u00e3o do Sed ser \"ignore-case\", \u00e9 dizendo literalmente todas as possibilidades, como em: prompt$ sed '/[Rr][Oo][Oo][Tt]/d' texto.txt Para apagar todas as linhas que cont\u00eam a palavra root, ROOT, RooT etc. No Sed da GNU, a partir da vers\u00e3o 3.01-beta1 (*), foi adicionado o modificador I no endere\u00e7o e no comando s/// , fazendo com que o comando acima fique mais simples: prompt$ sed '/root/Id' texto.txt Ou ainda: prompt$ sed 's/root/administrador/Ig' texto.txt (*) veja o t\u00f3pico Nota sobre os adicionais GNU 7.4. Lendo e gravando em arquivos externos 7.4.1. Lendo arquivos Uma tarefa comum \u00e9 incluir cabe\u00e7alho e rodap\u00e9 num arquivo qualquer. O Sed possui um comando espec\u00edfico para ler arquivos, o r , ent\u00e3o basta(*): prompt$ sed -e '1r cabecalho.txt' -e '$r rodape.txt' texto.txt Para incluir o cabe\u00e7alho ap\u00f3s a linha 1 e incluir o rodap\u00e9 ap\u00f3s a \u00faltima linha. (*) a explica\u00e7\u00e3o do porqu\u00ea das op\u00e7\u00f5es -e est\u00e1 no t\u00f3pico Aplicando v\u00e1rios comandos de uma vez . 7.4.2. Gravando arquivos O comando w grava num arquivo a linha atual, ou melhor, o conte\u00fado do espa\u00e7o padr\u00e3o . Por exemplo, voc\u00ea quer gravar num arquivo o resultado de uma busca por linhas que cont\u00eam a palavra estorvo . A solu\u00e7\u00e3o n\u00e3o- Sed seria: prompt$ grep 'estorvo' texto.txt > estorvos.txt Nosso similar em Sed seria: prompt$ sed '/estorvo/w estorvos.txt' texto.txt Gravar dados num arquivo tamb\u00e9m pode servir de espa\u00e7o auxiliar caso o espa\u00e7o reserva n\u00e3o seja suficiente. Mas esta \u00e9 uma op\u00e7\u00e3o dr\u00e1stica, n\u00e3o t\u00e3o flex\u00edvel. Mais informa\u00e7\u00f5es sobre o espa\u00e7o reserva no t\u00f3pico Conhecendo os registradores internos . 7.5. Trocando um trecho de texto por outro Uma tarefa que parece simples mas confunde, \u00e9 trocar um trecho de texto, como um par\u00e1grafo inteiro por exemplo, por outro trecho, independente do n\u00famero de linhas de ambos. 7.5.1. Trocar v\u00e1rias linhas por uma Essa \u00e9 simples, basta usar o comando c , que \"Coloca\" um texto no lugar da linha atual. A \u00fanica complica\u00e7\u00e3o \u00e9 definir o endere\u00e7o , para aplicar o comando apenas nas linhas desejadas. Por exemplo, vamos colocar uma frase no lugar de uma \u00e1rea de texto pr\u00e9-formatado num documento HTML. Esta \u00e1rea \u00e9 delimitada pelos identificadores <pre> e </pre> : prompt$ sed '/<pre>/,/<\\/pre>/c \\ prompt$ aqui tinha texto pr\u00e9-formatado' texto.html Note que o comando c (assim como o a e o i ) exige que o texto que ele recebe como par\u00e2metro esteja na linha seguinte, estando a quebra de linha escapada com a barra invertida \\ No Sed da GNU, a partir da vers\u00e3o 3.02a (*), \u00e9 permitido que se coloque o texto na mesma linha: prompt$ sed '/<pre>/,/<\\/pre>/c aqui tinha texto pr\u00e9-formatado' texto.html (*) veja o t\u00f3pico Nota sobre os adicionais GNU 7.5.2. Trocar v\u00e1rias linhas por outras Similarmente a trocar por apenas uma linha, pode-se usar o comando c e passar v\u00e1rias linhas para ele. O \u00fanico detalhe \u00e9 que todas as linhas devem ser escapadas no final, menos a \u00faltima: prompt$ sed '/<pre>/,/<\\/pre>/c \\ prompt$ aqui tinha texto pr\u00e9-formatado,\\ prompt$ mas eu resolvi tirar.\\ prompt$ porque?\\ prompt$ porque sim' texto.html \u00c9 claro, quando o comando come\u00e7a a ficar grande desse jeito, \u00e9 melhor coloc\u00e1-lo num arquivo. Saiba mais detalhes sobre isso no t\u00f3pico Colocando comandos sed num arquivo . Mas melhor ainda \u00e9 separar o comando Sed do texto, colocando-o num arquivo separado. Assim, quando se precisar alterar este texto, basta edit\u00e1-lo, sem mudar o comando Sed , e sem precisar ficar colocando \\ no final de cada linha. Supondo que nosso texto explicativo do porqu\u00ea da retirada do texto pr\u00e9-formatado foi gravado no arquivo desculpa.txt , utilizaremos o comando r para l\u00ea-lo e o comando d para apagar o texto antigo: prompt$ sed -e '/<\\/pre>/r desculpa.txt' -e '/<pre>/,/<\\/pre>/d' texto.html Ent\u00e3o acompanhe o que acontece: o primeiro comando ser\u00e1 executado apenas na linha </pre> que \u00e9 o fechamento do trecho, ent\u00e3o vamos esquecer dele por enquanto. O segundo comando diz para apagar o trecho desde <pre> at\u00e9 </pre> , ent\u00e3o assim que come\u00e7ar o trecho, ele vai apagando, linha por linha. Ao chegar na linha que cont\u00e9m o </pre> , o primeiro comando Sed entra em a\u00e7\u00e3o e l\u00ea o arquivo desculpa.txt , colocando seu conte\u00fado imediatamente ap\u00f3s a linha atual. Em seguida, o segundo comando apaga a linha </pre> , completando a tarefa. Esta segunda solu\u00e7\u00e3o \u00e9 mais dif\u00edcil de entender e implementar, mas \u00e9 muito mais pr\u00e1tica caso a altera\u00e7\u00e3o do texto a ser colocado seja freq\u00fcente, al\u00e9m destas altera\u00e7\u00f5es poderem ser feitas por algu\u00e9m que nem saiba o que \u00e9 Sed , pois ser\u00e1 apenas um texto normal. Note que sempre que o </pre> foi referenciado nos endere\u00e7os , a barra foi escapada, ficando <\\/pre> . A explica\u00e7\u00e3o desse escape est\u00e1 em Usando outros delimitadores . obs.: talvez o <pre></pre> n\u00e3o seja um exemplo dos mais did\u00e1ticos, mas n\u00e3o me veio algo mais comum \u00e0 mente... 7.6. Emulando outros comandos Aqui v\u00e3o alguns exemplos de emula\u00e7\u00f5es de outros comandos usando-se o Sed : comando emula\u00e7\u00e3o cat sed : head sed 10q grep sed /padr\u00e3o/!d grep -v sed /padr\u00e3o/d tac sed 1!G;h;$!d tail -1 sed $!d tr A-Z a-z sed y/ABCDEF...UVWXYZ/abcdef...uvwxyz/ wc -l sed -n $= A lista completa e atualizada pode ser encontrada em: http://sed.sourceforge.net/local/docs/emulating_unix.txt","title":"7. Tarefas diversas"},{"location":"Cap07-Tarefas-diversas.html#7-tarefas-diversas","text":"","title":"7. Tarefas diversas"},{"location":"Cap07-Tarefas-diversas.html#71-como-substituir-alguma-coisa-por-uma-quebra-de-linha","text":"No Sed da GNU, a partir da vers\u00e3o 3.02.80 (*), foi adicionado o \\n como escape v\u00e1lido dos dois lados do comando s/// . Com isso a tarefa de colocar cada palavra numa linha isolada, ou seja, trocar espa\u00e7os em branco por quebras de linha, fica trivial: prompt$ sed 's/ /\\n/g' texto.txt Mas com outras vers\u00f5es do Sed que n\u00e3o entendem este escape, a quebra de linha deve ser inserida literalmente e deve ser escapada: prompt$ sed 's/ /\\ prompt$ /g' texto.txt Como curiosidade, a opera\u00e7\u00e3o inversa, de colocar todas as linhas de um arquivo numa linha s\u00f3, j\u00e1 \u00e9 mais trabalhosa e utiliza o conceito de la\u00e7o : prompt$ sed ':a;$!N;s/\\n/ /g;ta' (*) veja o t\u00f3pico Nota sobre os adicionais GNU","title":"7.1. Como substituir alguma coisa por uma quebra de linha"},{"location":"Cap07-Tarefas-diversas.html#72-apagando-linhas-especificas","text":"O comando para apagar linhas \u00e9 o d . O \u00fanico detalhe nesta tarefa \u00e9 especificar quais linhas voc\u00ea vai querer apagar. Isso est\u00e1 completamente coberto no t\u00f3pico O endere\u00e7o .","title":"7.2. Apagando linhas espec\u00edficas"},{"location":"Cap07-Tarefas-diversas.html#73-como-ignorar-maiusculas-e-minusculas","text":"O jeito padr\u00e3o do Sed ser \"ignore-case\", \u00e9 dizendo literalmente todas as possibilidades, como em: prompt$ sed '/[Rr][Oo][Oo][Tt]/d' texto.txt Para apagar todas as linhas que cont\u00eam a palavra root, ROOT, RooT etc. No Sed da GNU, a partir da vers\u00e3o 3.01-beta1 (*), foi adicionado o modificador I no endere\u00e7o e no comando s/// , fazendo com que o comando acima fique mais simples: prompt$ sed '/root/Id' texto.txt Ou ainda: prompt$ sed 's/root/administrador/Ig' texto.txt (*) veja o t\u00f3pico Nota sobre os adicionais GNU","title":"7.3. Como ignorar mai\u00fasculas e min\u00fasculas"},{"location":"Cap07-Tarefas-diversas.html#74-lendo-e-gravando-em-arquivos-externos","text":"","title":"7.4. Lendo e gravando em arquivos externos"},{"location":"Cap07-Tarefas-diversas.html#741-lendo-arquivos","text":"Uma tarefa comum \u00e9 incluir cabe\u00e7alho e rodap\u00e9 num arquivo qualquer. O Sed possui um comando espec\u00edfico para ler arquivos, o r , ent\u00e3o basta(*): prompt$ sed -e '1r cabecalho.txt' -e '$r rodape.txt' texto.txt Para incluir o cabe\u00e7alho ap\u00f3s a linha 1 e incluir o rodap\u00e9 ap\u00f3s a \u00faltima linha. (*) a explica\u00e7\u00e3o do porqu\u00ea das op\u00e7\u00f5es -e est\u00e1 no t\u00f3pico Aplicando v\u00e1rios comandos de uma vez .","title":"7.4.1. Lendo arquivos"},{"location":"Cap07-Tarefas-diversas.html#742-gravando-arquivos","text":"O comando w grava num arquivo a linha atual, ou melhor, o conte\u00fado do espa\u00e7o padr\u00e3o . Por exemplo, voc\u00ea quer gravar num arquivo o resultado de uma busca por linhas que cont\u00eam a palavra estorvo . A solu\u00e7\u00e3o n\u00e3o- Sed seria: prompt$ grep 'estorvo' texto.txt > estorvos.txt Nosso similar em Sed seria: prompt$ sed '/estorvo/w estorvos.txt' texto.txt Gravar dados num arquivo tamb\u00e9m pode servir de espa\u00e7o auxiliar caso o espa\u00e7o reserva n\u00e3o seja suficiente. Mas esta \u00e9 uma op\u00e7\u00e3o dr\u00e1stica, n\u00e3o t\u00e3o flex\u00edvel. Mais informa\u00e7\u00f5es sobre o espa\u00e7o reserva no t\u00f3pico Conhecendo os registradores internos .","title":"7.4.2. Gravando arquivos"},{"location":"Cap07-Tarefas-diversas.html#75-trocando-um-trecho-de-texto-por-outro","text":"Uma tarefa que parece simples mas confunde, \u00e9 trocar um trecho de texto, como um par\u00e1grafo inteiro por exemplo, por outro trecho, independente do n\u00famero de linhas de ambos.","title":"7.5. Trocando um trecho de texto por outro"},{"location":"Cap07-Tarefas-diversas.html#751-trocar-varias-linhas-por-uma","text":"Essa \u00e9 simples, basta usar o comando c , que \"Coloca\" um texto no lugar da linha atual. A \u00fanica complica\u00e7\u00e3o \u00e9 definir o endere\u00e7o , para aplicar o comando apenas nas linhas desejadas. Por exemplo, vamos colocar uma frase no lugar de uma \u00e1rea de texto pr\u00e9-formatado num documento HTML. Esta \u00e1rea \u00e9 delimitada pelos identificadores <pre> e </pre> : prompt$ sed '/<pre>/,/<\\/pre>/c \\ prompt$ aqui tinha texto pr\u00e9-formatado' texto.html Note que o comando c (assim como o a e o i ) exige que o texto que ele recebe como par\u00e2metro esteja na linha seguinte, estando a quebra de linha escapada com a barra invertida \\ No Sed da GNU, a partir da vers\u00e3o 3.02a (*), \u00e9 permitido que se coloque o texto na mesma linha: prompt$ sed '/<pre>/,/<\\/pre>/c aqui tinha texto pr\u00e9-formatado' texto.html (*) veja o t\u00f3pico Nota sobre os adicionais GNU","title":"7.5.1. Trocar v\u00e1rias linhas por uma"},{"location":"Cap07-Tarefas-diversas.html#752-trocar-varias-linhas-por-outras","text":"Similarmente a trocar por apenas uma linha, pode-se usar o comando c e passar v\u00e1rias linhas para ele. O \u00fanico detalhe \u00e9 que todas as linhas devem ser escapadas no final, menos a \u00faltima: prompt$ sed '/<pre>/,/<\\/pre>/c \\ prompt$ aqui tinha texto pr\u00e9-formatado,\\ prompt$ mas eu resolvi tirar.\\ prompt$ porque?\\ prompt$ porque sim' texto.html \u00c9 claro, quando o comando come\u00e7a a ficar grande desse jeito, \u00e9 melhor coloc\u00e1-lo num arquivo. Saiba mais detalhes sobre isso no t\u00f3pico Colocando comandos sed num arquivo . Mas melhor ainda \u00e9 separar o comando Sed do texto, colocando-o num arquivo separado. Assim, quando se precisar alterar este texto, basta edit\u00e1-lo, sem mudar o comando Sed , e sem precisar ficar colocando \\ no final de cada linha. Supondo que nosso texto explicativo do porqu\u00ea da retirada do texto pr\u00e9-formatado foi gravado no arquivo desculpa.txt , utilizaremos o comando r para l\u00ea-lo e o comando d para apagar o texto antigo: prompt$ sed -e '/<\\/pre>/r desculpa.txt' -e '/<pre>/,/<\\/pre>/d' texto.html Ent\u00e3o acompanhe o que acontece: o primeiro comando ser\u00e1 executado apenas na linha </pre> que \u00e9 o fechamento do trecho, ent\u00e3o vamos esquecer dele por enquanto. O segundo comando diz para apagar o trecho desde <pre> at\u00e9 </pre> , ent\u00e3o assim que come\u00e7ar o trecho, ele vai apagando, linha por linha. Ao chegar na linha que cont\u00e9m o </pre> , o primeiro comando Sed entra em a\u00e7\u00e3o e l\u00ea o arquivo desculpa.txt , colocando seu conte\u00fado imediatamente ap\u00f3s a linha atual. Em seguida, o segundo comando apaga a linha </pre> , completando a tarefa. Esta segunda solu\u00e7\u00e3o \u00e9 mais dif\u00edcil de entender e implementar, mas \u00e9 muito mais pr\u00e1tica caso a altera\u00e7\u00e3o do texto a ser colocado seja freq\u00fcente, al\u00e9m destas altera\u00e7\u00f5es poderem ser feitas por algu\u00e9m que nem saiba o que \u00e9 Sed , pois ser\u00e1 apenas um texto normal. Note que sempre que o </pre> foi referenciado nos endere\u00e7os , a barra foi escapada, ficando <\\/pre> . A explica\u00e7\u00e3o desse escape est\u00e1 em Usando outros delimitadores . obs.: talvez o <pre></pre> n\u00e3o seja um exemplo dos mais did\u00e1ticos, mas n\u00e3o me veio algo mais comum \u00e0 mente... 7.6. Emulando outros comandos Aqui v\u00e3o alguns exemplos de emula\u00e7\u00f5es de outros comandos usando-se o Sed : comando emula\u00e7\u00e3o cat sed : head sed 10q grep sed /padr\u00e3o/!d grep -v sed /padr\u00e3o/d tac sed 1!G;h;$!d tail -1 sed $!d tr A-Z a-z sed y/ABCDEF...UVWXYZ/abcdef...uvwxyz/ wc -l sed -n $= A lista completa e atualizada pode ser encontrada em: http://sed.sourceforge.net/local/docs/emulating_unix.txt","title":"7.5.2. Trocar v\u00e1rias linhas por outras"},{"location":"Cap08-Conceitos-avan\u00e7ados.html","text":"8. Conceitos avan\u00e7ados Estes s\u00e3o conhecimentos necess\u00e1rios \u00e0queles que fazem uso intensivo do Sed , fazendo programas grandes e/ou complexos. 8.1. Monitorando um arquivo No Sed da GNU, a partir da vers\u00e3o 3.02.80 (*), foi adicionada a op\u00e7\u00e3o -u , que significa \"unbuffered\", ou seja, faz um uso minimalista dos registradores, mostrando a sa\u00edda o mais r\u00e1pido poss\u00edvel, tornando poss\u00edvel editar um fluxo intermin\u00e1vel como o gerado por um tail -f . Um exemplo pr\u00e1tico seria mostrar apenas as mensagens do sistema relativas \u00e0s conex\u00f5es ssh : prompt$ tail -f /var/log/messages | sed -nu '/sshd/p' Cuidado com -nu perto de crian\u00e7as! :) (*) veja o t\u00f3pico Nota sobre os adicionais GNU 8.2. Colocando comandos Sed num arquivo Como os comandos Sed v\u00e3o ficando extensos e complicados, \u00e9 conveniente coloc\u00e1-los num arquivo , com estrutura\u00e7\u00e3o e coment\u00e1rios. Voc\u00ea pode espalhar os comandos por v\u00e1rias linhas, trocando o ; por quebras de linha e colocar coment\u00e1rios precedidos de # . O exemplo de apagar linhas ficaria: # programa.sed: apaga algumas linhas # apaga a 5\u00aa linha 5d # apaga a 10\u00aa linha 10d # apaga as linhas que cont\u00eam 'estorvo' /estorvo/d Para dizer ao Sed para utilizar aquele arquivo como fonte de comandos, basta usar a op\u00e7\u00e3o -f prompt$ sed -f programa.sed texto.txt 8.3. Tornando arquivos Sed execut\u00e1veis O interpretador de comandos mais utilizado (bash) sempre procura na primeira linha de um arquivo instru\u00e7\u00f5es para execut\u00e1-lo. Se um arquivo \u00e9 um programinha em shell , basta colocar #!/bin/sh Na primeira linha para que o bash saiba que deve execut\u00e1-lo com o comando /bin/sh . O mesmo funciona para qualquer outro interpretador, como o Sed . ent\u00e3o para tornar um arquivos de comandos Sed execut\u00e1vel basta colocar como primeira linha: #!/bin/sed -f E \u00e9 claro, torn\u00e1-lo execut\u00e1vel: prompt$ chmod +x programa.sed E na linha de comando, chame-o normalmente: prompt$ ./programa.sed texto.txt prompt$ cat texto.txt | ./programa.sed 8.4. Conhecendo os registradores internos 8.4.1. Apresenta\u00e7\u00e3o O Sed possui 2 registradores (\"buffers\") internos, que s\u00e3o usados para a manipula\u00e7\u00e3o do texto. Um deles \u00e9 o espa\u00e7o padr\u00e3o (\"pattern space\"), que \u00e9 o registrador utilizado normalmente pelo Sed . \u00c9 nele que a linha a ser processada \u00e9 armazenada e manipulada. O outro \u00e9 o espa\u00e7o reserva (\"hold space\"), que \u00e9 um registrador auxiliar, inicialmente vazio, que serve para guardar uma c\u00f3pia da linha original, parte dela, ou agrupar dados diversos de v\u00e1rias linhas. H\u00e1 comandos para fazer a troca de dados entre os dois registradores: h guarda no espa\u00e7o reserva H guarda (anexando) no espa\u00e7o reserva g pega o conte\u00fado do espa\u00e7o reserva G pega (anexando) o conte\u00fado do espa\u00e7o reserva x troca os conte\u00fados dos 2 registradores O anexando acima significa \"n\u00e3o sobrescreve o conte\u00fado original\", ou seja, ele mant\u00e9m o que j\u00e1 tem, e adiciona um \\n (quebra de linha), seguido do texto manipulado. Para entender melhor, veja o exemplo gr\u00e1fico a seguir. 8.4.2. Exemplo Um exemplo did\u00e1tico de uso do espa\u00e7o reserva \u00e9 ir guardando nele algumas linhas do texto e mostr\u00e1-las depois no final do arquivo: prompt$ sed '/root/H;$g' /etc/passwd Ou seja, adicione no espa\u00e7o reserva (comando H ), as linhas que cont\u00eam a palavra root e na \u00faltima linha do arquivo (endere\u00e7o $ ), recupere o conte\u00fado do espa\u00e7o reserva (comando g ). 8.4.3. Exemplo gr\u00e1fico Como os registradores s\u00e3o a parte mais obscura do Sed (mais por falta de documenta\u00e7\u00e3o do que por complexidade), merecem uma explica\u00e7\u00e3o bem did\u00e1tica. Vamos l\u00e1. Temos os dois registradores vazios: (que daqui pra frente ser\u00e3o chamados apenas de padr\u00e3o e reserva ) __________________ __________________ | | | | | | | | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E um arquivo hipot\u00e9tico com o conte\u00fado: (n\u00e3o s\u00e3o odiosos estes exemplos com frutas?) laranja uva abacaxi melancia mimosa E aplicaremos o comando: sed '/laranja/h ; /uva/g ; /abacaxi/H ; /melancia/G ; /mimosa/x' Obtendo como resultado: laranja laranja abacaxi melancia laranja abacaxi laranja abacaxi Vejamos o que aconteceu. Lida a primeira linha laranja , ela \u00e9 imediatamente colocada no padr\u00e3o para ser manipulada: __________________ __________________ | | | | | laranja | | | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva O comando direcionado a ela \u00e9 o h , que guarda uma c\u00f3pia dela no reserva : __________________ __________________ | | | | | laranja | -- h --> | laranja | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva Como mais nenhum comando \u00e9 relativo \u00e0 linha laranja , o Sed d\u00e1 por encerrado o processamento dessa linha e imprime o conte\u00fado do padr\u00e3o na sa\u00edda: \"laranja\". Beleza, agora ele vai processar a segunda linha, novamente a primeira coisa \u00e9 coloc\u00e1-la no padr\u00e3o , sobrescrevendo o que tinha antes: __________________ __________________ | | | | | uva | | laranja | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva O reserva , enquanto nenhum outro comando escrever nele, permanecer\u00e1 o mesmo. O comando direcionado \u00e0 linha uva \u00e9 o g , que pega o conte\u00fado do reserva e o coloca no padr\u00e3o , apagando o que estiver nele (neste caso: uva ): __________________ __________________ | | | | | laranja | <-- g -- | laranja | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva Novamente, n\u00e3o h\u00e1 mais comandos a ser executados, ent\u00e3o imprime na sa\u00edda o conte\u00fado do padr\u00e3o : \"laranja\". Indo para a terceira linha e colocando-a no padr\u00e3o : __________________ __________________ | | | | | abacaxi | | laranja | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva O comando dessa linha \u00e9 o H , que tal como o h , guarda o conte\u00fado do padr\u00e3o no reserva , com diferen\u00e7a que ele preserva o conte\u00fado j\u00e1 existente dele, separando com um \\n : __________________ __________________ | | | | | abacaxi | -- H --> | laranja\\nabacaxi | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva Novamente, chegou ao fim, imprime o padr\u00e3o : \"abacaxi\". a pr\u00f3xima linha \u00e9 a da melancia : __________________ __________________ | | | | | melancia | | laranja\\nabacaxi | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E agora vai ficar divertido, aplicando o comando G , que pega o conte\u00fado do reserva e anexa ao padr\u00e3o : ____________________________ __________________ | | | | | melancia\\nlaranja\\nabacaxi | <-G-- | laranja\\nabacaxi | |____________________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E a sa\u00edda agora fica \"melancia\\nlaranja\\nabacaxi\", com o detalhe que o Sed troca estes \\n por quebras de linha na impress\u00e3o. Ent\u00e3o s\u00e3o 3 linhas na sa\u00edda. V\u00e1 acompanhando com o resultado que j\u00e1 foi cantado antecipadamente l\u00e1 em cima. E finalmente, a \u00faltima linha: __________________ __________________ | | | | | mimosa | | laranja\\nabacaxi | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E para ela, o comando que troca o conte\u00fado dos 2 registradores, o x : __________________ __________________ | | | | | laranja\\nabacaxi | <-- x ---> | mimosa | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E mostra na sa\u00edda o padr\u00e3o , com duas linhas: \"laranja\" e \"abacaxi\". Ufa! Depois dessa n\u00e3o venha me dizer que n\u00e3o sabe como funcionam os registradores internos do Sed ;) 8.4.4. Resum\u00e3o Cada linha nova lida \u00e9 colocada (sobrescrevendo) no espa\u00e7o padr\u00e3o Uma vez colocado algo no espa\u00e7o reserva , fica l\u00e1 at\u00e9 ser sobrescrito O \\n \u00e9 o separador do conte\u00fado original com o anexo Na sa\u00edda, o \\n vira quebra de linha Registradores s\u00e3o simples! ;) 8.4.5. Fluxograma Para uma representa\u00e7\u00e3o gr\u00e1fica dos fluxos e comandos que manipulam estes registradores, veja o t\u00f3pico Fluxos dos registradores internos .","title":"8. Conceitos avan\u00e7ados"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#8-conceitos-avancados","text":"Estes s\u00e3o conhecimentos necess\u00e1rios \u00e0queles que fazem uso intensivo do Sed , fazendo programas grandes e/ou complexos.","title":"8. Conceitos avan\u00e7ados"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#81-monitorando-um-arquivo","text":"No Sed da GNU, a partir da vers\u00e3o 3.02.80 (*), foi adicionada a op\u00e7\u00e3o -u , que significa \"unbuffered\", ou seja, faz um uso minimalista dos registradores, mostrando a sa\u00edda o mais r\u00e1pido poss\u00edvel, tornando poss\u00edvel editar um fluxo intermin\u00e1vel como o gerado por um tail -f . Um exemplo pr\u00e1tico seria mostrar apenas as mensagens do sistema relativas \u00e0s conex\u00f5es ssh : prompt$ tail -f /var/log/messages | sed -nu '/sshd/p' Cuidado com -nu perto de crian\u00e7as! :) (*) veja o t\u00f3pico Nota sobre os adicionais GNU","title":"8.1. Monitorando um arquivo"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#82-colocando-comandos-sed-num-arquivo","text":"Como os comandos Sed v\u00e3o ficando extensos e complicados, \u00e9 conveniente coloc\u00e1-los num arquivo , com estrutura\u00e7\u00e3o e coment\u00e1rios. Voc\u00ea pode espalhar os comandos por v\u00e1rias linhas, trocando o ; por quebras de linha e colocar coment\u00e1rios precedidos de # . O exemplo de apagar linhas ficaria: # programa.sed: apaga algumas linhas # apaga a 5\u00aa linha 5d # apaga a 10\u00aa linha 10d # apaga as linhas que cont\u00eam 'estorvo' /estorvo/d Para dizer ao Sed para utilizar aquele arquivo como fonte de comandos, basta usar a op\u00e7\u00e3o -f prompt$ sed -f programa.sed texto.txt","title":"8.2. Colocando comandos Sed num arquivo"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#83-tornando-arquivos-sed-executaveis","text":"O interpretador de comandos mais utilizado (bash) sempre procura na primeira linha de um arquivo instru\u00e7\u00f5es para execut\u00e1-lo. Se um arquivo \u00e9 um programinha em shell , basta colocar #!/bin/sh Na primeira linha para que o bash saiba que deve execut\u00e1-lo com o comando /bin/sh . O mesmo funciona para qualquer outro interpretador, como o Sed . ent\u00e3o para tornar um arquivos de comandos Sed execut\u00e1vel basta colocar como primeira linha: #!/bin/sed -f E \u00e9 claro, torn\u00e1-lo execut\u00e1vel: prompt$ chmod +x programa.sed E na linha de comando, chame-o normalmente: prompt$ ./programa.sed texto.txt prompt$ cat texto.txt | ./programa.sed","title":"8.3. Tornando arquivos Sed execut\u00e1veis"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#84-conhecendo-os-registradores-internos","text":"","title":"8.4. Conhecendo os registradores internos"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#841-apresentacao","text":"O Sed possui 2 registradores (\"buffers\") internos, que s\u00e3o usados para a manipula\u00e7\u00e3o do texto. Um deles \u00e9 o espa\u00e7o padr\u00e3o (\"pattern space\"), que \u00e9 o registrador utilizado normalmente pelo Sed . \u00c9 nele que a linha a ser processada \u00e9 armazenada e manipulada. O outro \u00e9 o espa\u00e7o reserva (\"hold space\"), que \u00e9 um registrador auxiliar, inicialmente vazio, que serve para guardar uma c\u00f3pia da linha original, parte dela, ou agrupar dados diversos de v\u00e1rias linhas. H\u00e1 comandos para fazer a troca de dados entre os dois registradores: h guarda no espa\u00e7o reserva H guarda (anexando) no espa\u00e7o reserva g pega o conte\u00fado do espa\u00e7o reserva G pega (anexando) o conte\u00fado do espa\u00e7o reserva x troca os conte\u00fados dos 2 registradores O anexando acima significa \"n\u00e3o sobrescreve o conte\u00fado original\", ou seja, ele mant\u00e9m o que j\u00e1 tem, e adiciona um \\n (quebra de linha), seguido do texto manipulado. Para entender melhor, veja o exemplo gr\u00e1fico a seguir.","title":"8.4.1. Apresenta\u00e7\u00e3o"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#842-exemplo","text":"Um exemplo did\u00e1tico de uso do espa\u00e7o reserva \u00e9 ir guardando nele algumas linhas do texto e mostr\u00e1-las depois no final do arquivo: prompt$ sed '/root/H;$g' /etc/passwd Ou seja, adicione no espa\u00e7o reserva (comando H ), as linhas que cont\u00eam a palavra root e na \u00faltima linha do arquivo (endere\u00e7o $ ), recupere o conte\u00fado do espa\u00e7o reserva (comando g ).","title":"8.4.2. Exemplo"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#843-exemplo-grafico","text":"Como os registradores s\u00e3o a parte mais obscura do Sed (mais por falta de documenta\u00e7\u00e3o do que por complexidade), merecem uma explica\u00e7\u00e3o bem did\u00e1tica. Vamos l\u00e1. Temos os dois registradores vazios: (que daqui pra frente ser\u00e3o chamados apenas de padr\u00e3o e reserva ) __________________ __________________ | | | | | | | | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E um arquivo hipot\u00e9tico com o conte\u00fado: (n\u00e3o s\u00e3o odiosos estes exemplos com frutas?) laranja uva abacaxi melancia mimosa E aplicaremos o comando: sed '/laranja/h ; /uva/g ; /abacaxi/H ; /melancia/G ; /mimosa/x' Obtendo como resultado: laranja laranja abacaxi melancia laranja abacaxi laranja abacaxi Vejamos o que aconteceu. Lida a primeira linha laranja , ela \u00e9 imediatamente colocada no padr\u00e3o para ser manipulada: __________________ __________________ | | | | | laranja | | | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva O comando direcionado a ela \u00e9 o h , que guarda uma c\u00f3pia dela no reserva : __________________ __________________ | | | | | laranja | -- h --> | laranja | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva Como mais nenhum comando \u00e9 relativo \u00e0 linha laranja , o Sed d\u00e1 por encerrado o processamento dessa linha e imprime o conte\u00fado do padr\u00e3o na sa\u00edda: \"laranja\". Beleza, agora ele vai processar a segunda linha, novamente a primeira coisa \u00e9 coloc\u00e1-la no padr\u00e3o , sobrescrevendo o que tinha antes: __________________ __________________ | | | | | uva | | laranja | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva O reserva , enquanto nenhum outro comando escrever nele, permanecer\u00e1 o mesmo. O comando direcionado \u00e0 linha uva \u00e9 o g , que pega o conte\u00fado do reserva e o coloca no padr\u00e3o , apagando o que estiver nele (neste caso: uva ): __________________ __________________ | | | | | laranja | <-- g -- | laranja | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva Novamente, n\u00e3o h\u00e1 mais comandos a ser executados, ent\u00e3o imprime na sa\u00edda o conte\u00fado do padr\u00e3o : \"laranja\". Indo para a terceira linha e colocando-a no padr\u00e3o : __________________ __________________ | | | | | abacaxi | | laranja | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva O comando dessa linha \u00e9 o H , que tal como o h , guarda o conte\u00fado do padr\u00e3o no reserva , com diferen\u00e7a que ele preserva o conte\u00fado j\u00e1 existente dele, separando com um \\n : __________________ __________________ | | | | | abacaxi | -- H --> | laranja\\nabacaxi | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva Novamente, chegou ao fim, imprime o padr\u00e3o : \"abacaxi\". a pr\u00f3xima linha \u00e9 a da melancia : __________________ __________________ | | | | | melancia | | laranja\\nabacaxi | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E agora vai ficar divertido, aplicando o comando G , que pega o conte\u00fado do reserva e anexa ao padr\u00e3o : ____________________________ __________________ | | | | | melancia\\nlaranja\\nabacaxi | <-G-- | laranja\\nabacaxi | |____________________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E a sa\u00edda agora fica \"melancia\\nlaranja\\nabacaxi\", com o detalhe que o Sed troca estes \\n por quebras de linha na impress\u00e3o. Ent\u00e3o s\u00e3o 3 linhas na sa\u00edda. V\u00e1 acompanhando com o resultado que j\u00e1 foi cantado antecipadamente l\u00e1 em cima. E finalmente, a \u00faltima linha: __________________ __________________ | | | | | mimosa | | laranja\\nabacaxi | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E para ela, o comando que troca o conte\u00fado dos 2 registradores, o x : __________________ __________________ | | | | | laranja\\nabacaxi | <-- x ---> | mimosa | |__________________| |__________________| espa\u00e7o padr\u00e3o espa\u00e7o reserva E mostra na sa\u00edda o padr\u00e3o , com duas linhas: \"laranja\" e \"abacaxi\". Ufa! Depois dessa n\u00e3o venha me dizer que n\u00e3o sabe como funcionam os registradores internos do Sed ;)","title":"8.4.3. Exemplo gr\u00e1fico"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#844-resumao","text":"Cada linha nova lida \u00e9 colocada (sobrescrevendo) no espa\u00e7o padr\u00e3o Uma vez colocado algo no espa\u00e7o reserva , fica l\u00e1 at\u00e9 ser sobrescrito O \\n \u00e9 o separador do conte\u00fado original com o anexo Na sa\u00edda, o \\n vira quebra de linha Registradores s\u00e3o simples! ;)","title":"8.4.4. Resum\u00e3o"},{"location":"Cap08-Conceitos-avan\u00e7ados.html#845-fluxograma","text":"Para uma representa\u00e7\u00e3o gr\u00e1fica dos fluxos e comandos que manipulam estes registradores, veja o t\u00f3pico Fluxos dos registradores internos .","title":"8.4.5. Fluxograma"},{"location":"Cap09-Fluxogramas.html","text":"9. Fluxogramas 9.1. Fluxos do texto _________ w | | r +------->| ARQUIVO |-------> | |_________| ______|______ SA\u00cdDA n | | p P l ENTRADA ------->| S E D |-------------------> N |_____________| a i c | | d +-------> /dev/null D 9.2. Fluxos da execu\u00e7\u00e3o dos comandos _________ | | ______| pr\u00f3xima |<---+ / | linha | | | |_________| | | | v d D | n N _____|______ | | COME\u00c7O --------->| COMANDOS |----------> FIM DO PROGRAMA |____________| q | ^ b | t | | | | ___|______ | | | +-->| marca\u00e7\u00e3o | |__________| 9.3. Fluxos dos registradores internos _________________ __________________ | |---- h H --->| | | ESPA\u00c7O PADR\u00c3O |<--- x --->| ESPA\u00c7O RESERVA | |_________________|<--- g G ----|__________________| Veja explica\u00e7\u00e3o sobre estes registradores no t\u00f3pico Conhecendo os registradores internos .","title":"9. Fluxogramas"},{"location":"Cap09-Fluxogramas.html#9-fluxogramas","text":"","title":"9. Fluxogramas"},{"location":"Cap09-Fluxogramas.html#91-fluxos-do-texto","text":"_________ w | | r +------->| ARQUIVO |-------> | |_________| ______|______ SA\u00cdDA n | | p P l ENTRADA ------->| S E D |-------------------> N |_____________| a i c | | d +-------> /dev/null D","title":"9.1. Fluxos do texto"},{"location":"Cap09-Fluxogramas.html#92-fluxos-da-execucao-dos-comandos","text":"_________ | | ______| pr\u00f3xima |<---+ / | linha | | | |_________| | | | v d D | n N _____|______ | | COME\u00c7O --------->| COMANDOS |----------> FIM DO PROGRAMA |____________| q | ^ b | t | | | | ___|______ | | | +-->| marca\u00e7\u00e3o | |__________|","title":"9.2. Fluxos da execu\u00e7\u00e3o dos comandos"},{"location":"Cap09-Fluxogramas.html#93-fluxos-dos-registradores-internos","text":"_________________ __________________ | |---- h H --->| | | ESPA\u00c7O PADR\u00c3O |<--- x --->| ESPA\u00c7O RESERVA | |_________________|<--- g G ----|__________________| Veja explica\u00e7\u00e3o sobre estes registradores no t\u00f3pico Conhecendo os registradores internos .","title":"9.3. Fluxos dos registradores internos"},{"location":"Cap10-Nota-sobre-os-adicionais-GNU.html","text":"10. Nota sobre os adicionais GNU O Sed da GNU, atualmente \u00e9 o utilizado pela maioria das distribui\u00e7\u00f5es de Linux e \u00e9 o que tem mais funcionalidades novas. Mas o pre\u00e7o de se usar essas funcionalidades \u00e9 que se perde em compatibilidade , pois seu programa Sed n\u00e3o funcionar\u00e1 em UNIXes ou outros sistemas que usem um Sed que n\u00e3o o da GNU. Para a grande maioria dos usu\u00e1rios isso n\u00e3o far\u00e1 diferen\u00e7a pois geralmente trabalham com apenas um tipo de sistema operacional, mas o recado fica dado.","title":"10. Nota sobre os adicionais GNU"},{"location":"Cap10-Nota-sobre-os-adicionais-GNU.html#10-nota-sobre-os-adicionais-gnu","text":"O Sed da GNU, atualmente \u00e9 o utilizado pela maioria das distribui\u00e7\u00f5es de Linux e \u00e9 o que tem mais funcionalidades novas. Mas o pre\u00e7o de se usar essas funcionalidades \u00e9 que se perde em compatibilidade , pois seu programa Sed n\u00e3o funcionar\u00e1 em UNIXes ou outros sistemas que usem um Sed que n\u00e3o o da GNU. Para a grande maioria dos usu\u00e1rios isso n\u00e3o far\u00e1 diferen\u00e7a pois geralmente trabalham com apenas um tipo de sistema operacional, mas o recado fica dado.","title":"10. Nota sobre os adicionais GNU"},{"location":"Cap11-Onde-obter-mais-informa\u00e7\u00f5es.html","text":"11. Onde obter mais informa\u00e7\u00f5es Informa\u00e7\u00f5es em portugu\u00eas: https://aurelio.net/sed Informa\u00e7\u00f5es em ingl\u00eas: http://www.gnu.org/software/sed/manual/sed.html http://sed.sourceforge.net/sed1line.txt http://sed.sourceforge.net/sedfaq.html http://www.dreamwvr.com/sed-info/sed-faq.html http://www.rtfiber.com.tw/~changyj/sed \u00daltima vers\u00e3o em desenvolvimento do Sed: ftp://ftp.unicamp.br/pub/gnu/sed/","title":"11. Onde obter mais informa\u00e7\u00f5es"},{"location":"Cap11-Onde-obter-mais-informa\u00e7\u00f5es.html#11-onde-obter-mais-informacoes","text":"Informa\u00e7\u00f5es em portugu\u00eas: https://aurelio.net/sed Informa\u00e7\u00f5es em ingl\u00eas: http://www.gnu.org/software/sed/manual/sed.html http://sed.sourceforge.net/sed1line.txt http://sed.sourceforge.net/sedfaq.html http://www.dreamwvr.com/sed-info/sed-faq.html http://www.rtfiber.com.tw/~changyj/sed \u00daltima vers\u00e3o em desenvolvimento do Sed: ftp://ftp.unicamp.br/pub/gnu/sed/","title":"11. Onde obter mais informa\u00e7\u00f5es"}]}